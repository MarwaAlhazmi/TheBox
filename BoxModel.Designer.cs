//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("boxModel", "FK_Agenda_Agenda", "Agenda", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TheBox.Agendum), "Agenda1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TheBox.Agendum), true)]
[assembly: EdmRelationshipAttribute("boxModel", "FK_Agenda_Meeting", "Meeting", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TheBox.Meeting), "Agenda", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TheBox.Agendum), true)]
[assembly: EdmRelationshipAttribute("boxModel", "FK_AgendaPrivacy_Agenda", "Agenda", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TheBox.Agendum), "AgendaPrivacy", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TheBox.AgendaPrivacy), true)]
[assembly: EdmRelationshipAttribute("boxModel", "FK_Discussion_Agenda", "Agenda", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TheBox.Agendum), "Discussion", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TheBox.Discussion), true)]
[assembly: EdmRelationshipAttribute("boxModel", "FK_NotificationHeader_Agenda", "Agenda", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TheBox.Agendum), "NotificationHeader", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TheBox.NotificationHeader), true)]
[assembly: EdmRelationshipAttribute("boxModel", "FK_AgendaPrivacy_MeetingParticipant", "MeetingParticipant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TheBox.MeetingParticipant), "AgendaPrivacy", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TheBox.AgendaPrivacy), true)]
[assembly: EdmRelationshipAttribute("boxModel", "FK_Comment_UserProfile", "UserProfile", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TheBox.UserProfile), "Comment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TheBox.Comment), true)]
[assembly: EdmRelationshipAttribute("boxModel", "FK_Discussion_Meeting", "Meeting", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TheBox.Meeting), "Discussion", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TheBox.Discussion), true)]
[assembly: EdmRelationshipAttribute("boxModel", "FK_Discussion_UserProfile", "UserProfile", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TheBox.UserProfile), "Discussion", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TheBox.Discussion), true)]
[assembly: EdmRelationshipAttribute("boxModel", "FK_Reply_Discussion", "Discussion", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TheBox.Discussion), "Reply", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TheBox.Reply), true)]
[assembly: EdmRelationshipAttribute("boxModel", "FK_Invitation_Meeting", "Meeting", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TheBox.Meeting), "Invitation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TheBox.Invitation), true)]
[assembly: EdmRelationshipAttribute("boxModel", "FK_Invitation_UserProfile", "UserProfile", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TheBox.UserProfile), "Invitation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TheBox.Invitation), true)]
[assembly: EdmRelationshipAttribute("boxModel", "FK_MeetingLocation_Location", "Location", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TheBox.Location), "MeetingLocation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TheBox.MeetingLocation), true)]
[assembly: EdmRelationshipAttribute("boxModel", "FK_Meeting_MeetingType", "MeetingType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TheBox.MeetingType), "Meeting", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TheBox.Meeting), true)]
[assembly: EdmRelationshipAttribute("boxModel", "FK_MeetingFile_Meeting", "Meeting", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TheBox.Meeting), "MeetingFile", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TheBox.MeetingFile), true)]
[assembly: EdmRelationshipAttribute("boxModel", "FK_MeetingLocation_Meeting", "Meeting", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TheBox.Meeting), "MeetingLocation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TheBox.MeetingLocation), true)]
[assembly: EdmRelationshipAttribute("boxModel", "FK_MeetingParticipant_Meeting", "Meeting", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TheBox.Meeting), "MeetingParticipant", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TheBox.MeetingParticipant), true)]
[assembly: EdmRelationshipAttribute("boxModel", "FK_MeetingResource_Meeting", "Meeting", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TheBox.Meeting), "MeetingResource", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TheBox.MeetingResource), true)]
[assembly: EdmRelationshipAttribute("boxModel", "FK_NotificationHeader_Meeting", "Meeting", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TheBox.Meeting), "NotificationHeader", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TheBox.NotificationHeader), true)]
[assembly: EdmRelationshipAttribute("boxModel", "FK_MeetingParticipant_UserProfile", "UserProfile", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TheBox.UserProfile), "MeetingParticipant", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TheBox.MeetingParticipant), true)]
[assembly: EdmRelationshipAttribute("boxModel", "FK_MeetingResource_Resource", "Resource", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TheBox.Resource), "MeetingResource", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TheBox.MeetingResource), true)]
[assembly: EdmRelationshipAttribute("boxModel", "FK_NotificationHeader_Project", "Project", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TheBox.Project), "NotificationHeader", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TheBox.NotificationHeader), true)]
[assembly: EdmRelationshipAttribute("boxModel", "FK_NotificationHeader_UserProfile", "UserProfile", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TheBox.UserProfile), "NotificationHeader", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TheBox.NotificationHeader), true)]
[assembly: EdmRelationshipAttribute("boxModel", "FK_NotInfo_NotificationHeader", "NotificationHeader", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TheBox.NotificationHeader), "NotInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TheBox.NotInfo), true)]
[assembly: EdmRelationshipAttribute("boxModel", "FK_NotInfo_UserProfile", "UserProfile", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TheBox.UserProfile), "NotInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TheBox.NotInfo), true)]
[assembly: EdmRelationshipAttribute("boxModel", "FK_ProjectFile_Project", "Project", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TheBox.Project), "ProjectFile", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TheBox.ProjectFile), true)]
[assembly: EdmRelationshipAttribute("boxModel", "FK_ProjectUser_Project", "Project", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TheBox.Project), "ProjectUser", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TheBox.ProjectUser), true)]
[assembly: EdmRelationshipAttribute("boxModel", "FK_ProjectFile_ProjectUser", "ProjectUser", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TheBox.ProjectUser), "ProjectFile", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TheBox.ProjectFile), true)]
[assembly: EdmRelationshipAttribute("boxModel", "FK_ProjectPrivacy_ProjectFile", "ProjectFile", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TheBox.ProjectFile), "ProjectPrivacy", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TheBox.ProjectPrivacy), true)]
[assembly: EdmRelationshipAttribute("boxModel", "FK_ProjectPrivacy_ProjectUser", "ProjectUser", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TheBox.ProjectUser), "ProjectPrivacy", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TheBox.ProjectPrivacy), true)]
[assembly: EdmRelationshipAttribute("boxModel", "FK_ProjectUser_UserProfile", "UserProfile", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TheBox.UserProfile), "ProjectUser", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TheBox.ProjectUser), true)]
[assembly: EdmRelationshipAttribute("boxModel", "FK_Reply_UserProfile", "UserProfile", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TheBox.UserProfile), "Reply", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TheBox.Reply), true)]
[assembly: EdmRelationshipAttribute("boxModel", "FK_TaskUser_UserProfile", "UserProfile", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TheBox.UserProfile), "TaskUser", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TheBox.TaskUser), true)]
[assembly: EdmRelationshipAttribute("boxModel", "FK_Discussion_Project", "Project", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TheBox.Project), "Discussion", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TheBox.Discussion), true)]
[assembly: EdmRelationshipAttribute("boxModel", "FK_Discussion_ProjectFile", "ProjectFile", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TheBox.ProjectFile), "Discussion", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TheBox.Discussion), true)]
[assembly: EdmRelationshipAttribute("boxModel", "FK_FilePrivacy_UserProfile", "UserProfile", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TheBox.UserProfile), "FilePrivacy", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TheBox.FilePrivacy), true)]
[assembly: EdmRelationshipAttribute("boxModel", "FK_DFile_UserProfile", "UserProfile", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TheBox.UserProfile), "DFile", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TheBox.DFile), true)]
[assembly: EdmRelationshipAttribute("boxModel", "FK_FilePrivacy_DFile", "DFile", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TheBox.DFile), "FilePrivacy", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TheBox.FilePrivacy), true)]
[assembly: EdmRelationshipAttribute("boxModel", "FK_NotificationHeader_Discussion", "Discussion", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TheBox.Discussion), "NotificationHeader", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TheBox.NotificationHeader), true)]
[assembly: EdmRelationshipAttribute("boxModel", "FK_TaskAssign_Agenda", "Agendum", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TheBox.Agendum), "TaskAssign", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TheBox.TaskAssign), true)]
[assembly: EdmRelationshipAttribute("boxModel", "FK_TaskAssign_Meeting", "Meeting", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TheBox.Meeting), "TaskAssign", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TheBox.TaskAssign), true)]
[assembly: EdmRelationshipAttribute("boxModel", "FK_TaskAssign_ProjectFile", "ProjectFile", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TheBox.ProjectFile), "TaskAssign", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TheBox.TaskAssign), true)]
[assembly: EdmRelationshipAttribute("boxModel", "FK_TaskAssign_UserProfile", "UserProfile", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TheBox.UserProfile), "TaskAssign", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TheBox.TaskAssign), true)]
[assembly: EdmRelationshipAttribute("boxModel", "FK_TaskUser_TaskAssign", "TaskAssign", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TheBox.TaskAssign), "TaskUser", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TheBox.TaskUser), true)]

#endregion

namespace TheBox
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class boxEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new boxEntities object using the connection string found in the 'boxEntities' section of the application configuration file.
        /// </summary>
        public boxEntities() : base("name=boxEntities", "boxEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new boxEntities object.
        /// </summary>
        public boxEntities(string connectionString) : base(connectionString, "boxEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new boxEntities object.
        /// </summary>
        public boxEntities(EntityConnection connection) : base(connection, "boxEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Agendum> Agenda
        {
            get
            {
                if ((_Agenda == null))
                {
                    _Agenda = base.CreateObjectSet<Agendum>("Agenda");
                }
                return _Agenda;
            }
        }
        private ObjectSet<Agendum> _Agenda;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AgendaPrivacy> AgendaPrivacies
        {
            get
            {
                if ((_AgendaPrivacies == null))
                {
                    _AgendaPrivacies = base.CreateObjectSet<AgendaPrivacy>("AgendaPrivacies");
                }
                return _AgendaPrivacies;
            }
        }
        private ObjectSet<AgendaPrivacy> _AgendaPrivacies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Comment> Comments
        {
            get
            {
                if ((_Comments == null))
                {
                    _Comments = base.CreateObjectSet<Comment>("Comments");
                }
                return _Comments;
            }
        }
        private ObjectSet<Comment> _Comments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Discussion> Discussions
        {
            get
            {
                if ((_Discussions == null))
                {
                    _Discussions = base.CreateObjectSet<Discussion>("Discussions");
                }
                return _Discussions;
            }
        }
        private ObjectSet<Discussion> _Discussions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Event> Events
        {
            get
            {
                if ((_Events == null))
                {
                    _Events = base.CreateObjectSet<Event>("Events");
                }
                return _Events;
            }
        }
        private ObjectSet<Event> _Events;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Invitation> Invitations
        {
            get
            {
                if ((_Invitations == null))
                {
                    _Invitations = base.CreateObjectSet<Invitation>("Invitations");
                }
                return _Invitations;
            }
        }
        private ObjectSet<Invitation> _Invitations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Location> Locations
        {
            get
            {
                if ((_Locations == null))
                {
                    _Locations = base.CreateObjectSet<Location>("Locations");
                }
                return _Locations;
            }
        }
        private ObjectSet<Location> _Locations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Meeting> Meetings
        {
            get
            {
                if ((_Meetings == null))
                {
                    _Meetings = base.CreateObjectSet<Meeting>("Meetings");
                }
                return _Meetings;
            }
        }
        private ObjectSet<Meeting> _Meetings;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MeetingFile> MeetingFiles
        {
            get
            {
                if ((_MeetingFiles == null))
                {
                    _MeetingFiles = base.CreateObjectSet<MeetingFile>("MeetingFiles");
                }
                return _MeetingFiles;
            }
        }
        private ObjectSet<MeetingFile> _MeetingFiles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MeetingLocation> MeetingLocations
        {
            get
            {
                if ((_MeetingLocations == null))
                {
                    _MeetingLocations = base.CreateObjectSet<MeetingLocation>("MeetingLocations");
                }
                return _MeetingLocations;
            }
        }
        private ObjectSet<MeetingLocation> _MeetingLocations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MeetingParticipant> MeetingParticipants
        {
            get
            {
                if ((_MeetingParticipants == null))
                {
                    _MeetingParticipants = base.CreateObjectSet<MeetingParticipant>("MeetingParticipants");
                }
                return _MeetingParticipants;
            }
        }
        private ObjectSet<MeetingParticipant> _MeetingParticipants;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MeetingResource> MeetingResources
        {
            get
            {
                if ((_MeetingResources == null))
                {
                    _MeetingResources = base.CreateObjectSet<MeetingResource>("MeetingResources");
                }
                return _MeetingResources;
            }
        }
        private ObjectSet<MeetingResource> _MeetingResources;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MeetingType> MeetingTypes
        {
            get
            {
                if ((_MeetingTypes == null))
                {
                    _MeetingTypes = base.CreateObjectSet<MeetingType>("MeetingTypes");
                }
                return _MeetingTypes;
            }
        }
        private ObjectSet<MeetingType> _MeetingTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<NotificationHeader> NotificationHeaders
        {
            get
            {
                if ((_NotificationHeaders == null))
                {
                    _NotificationHeaders = base.CreateObjectSet<NotificationHeader>("NotificationHeaders");
                }
                return _NotificationHeaders;
            }
        }
        private ObjectSet<NotificationHeader> _NotificationHeaders;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<NotInfo> NotInfoes
        {
            get
            {
                if ((_NotInfoes == null))
                {
                    _NotInfoes = base.CreateObjectSet<NotInfo>("NotInfoes");
                }
                return _NotInfoes;
            }
        }
        private ObjectSet<NotInfo> _NotInfoes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Project> Projects
        {
            get
            {
                if ((_Projects == null))
                {
                    _Projects = base.CreateObjectSet<Project>("Projects");
                }
                return _Projects;
            }
        }
        private ObjectSet<Project> _Projects;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProjectFile> ProjectFiles
        {
            get
            {
                if ((_ProjectFiles == null))
                {
                    _ProjectFiles = base.CreateObjectSet<ProjectFile>("ProjectFiles");
                }
                return _ProjectFiles;
            }
        }
        private ObjectSet<ProjectFile> _ProjectFiles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProjectPrivacy> ProjectPrivacies
        {
            get
            {
                if ((_ProjectPrivacies == null))
                {
                    _ProjectPrivacies = base.CreateObjectSet<ProjectPrivacy>("ProjectPrivacies");
                }
                return _ProjectPrivacies;
            }
        }
        private ObjectSet<ProjectPrivacy> _ProjectPrivacies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProjectUser> ProjectUsers
        {
            get
            {
                if ((_ProjectUsers == null))
                {
                    _ProjectUsers = base.CreateObjectSet<ProjectUser>("ProjectUsers");
                }
                return _ProjectUsers;
            }
        }
        private ObjectSet<ProjectUser> _ProjectUsers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Reply> Replies
        {
            get
            {
                if ((_Replies == null))
                {
                    _Replies = base.CreateObjectSet<Reply>("Replies");
                }
                return _Replies;
            }
        }
        private ObjectSet<Reply> _Replies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Resource> Resources
        {
            get
            {
                if ((_Resources == null))
                {
                    _Resources = base.CreateObjectSet<Resource>("Resources");
                }
                return _Resources;
            }
        }
        private ObjectSet<Resource> _Resources;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<sysdiagram> sysdiagrams
        {
            get
            {
                if ((_sysdiagrams == null))
                {
                    _sysdiagrams = base.CreateObjectSet<sysdiagram>("sysdiagrams");
                }
                return _sysdiagrams;
            }
        }
        private ObjectSet<sysdiagram> _sysdiagrams;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TaskUser> TaskUsers
        {
            get
            {
                if ((_TaskUsers == null))
                {
                    _TaskUsers = base.CreateObjectSet<TaskUser>("TaskUsers");
                }
                return _TaskUsers;
            }
        }
        private ObjectSet<TaskUser> _TaskUsers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserProfile> UserProfiles
        {
            get
            {
                if ((_UserProfiles == null))
                {
                    _UserProfiles = base.CreateObjectSet<UserProfile>("UserProfiles");
                }
                return _UserProfiles;
            }
        }
        private ObjectSet<UserProfile> _UserProfiles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FilePrivacy> FilePrivacies
        {
            get
            {
                if ((_FilePrivacies == null))
                {
                    _FilePrivacies = base.CreateObjectSet<FilePrivacy>("FilePrivacies");
                }
                return _FilePrivacies;
            }
        }
        private ObjectSet<FilePrivacy> _FilePrivacies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DFile> DFiles
        {
            get
            {
                if ((_DFiles == null))
                {
                    _DFiles = base.CreateObjectSet<DFile>("DFiles");
                }
                return _DFiles;
            }
        }
        private ObjectSet<DFile> _DFiles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TaskAssign> TaskAssigns
        {
            get
            {
                if ((_TaskAssigns == null))
                {
                    _TaskAssigns = base.CreateObjectSet<TaskAssign>("TaskAssigns");
                }
                return _TaskAssigns;
            }
        }
        private ObjectSet<TaskAssign> _TaskAssigns;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Agenda EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAgenda(Agendum agendum)
        {
            base.AddObject("Agenda", agendum);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AgendaPrivacies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAgendaPrivacies(AgendaPrivacy agendaPrivacy)
        {
            base.AddObject("AgendaPrivacies", agendaPrivacy);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Comments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToComments(Comment comment)
        {
            base.AddObject("Comments", comment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Discussions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDiscussions(Discussion discussion)
        {
            base.AddObject("Discussions", discussion);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Events EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEvents(Event @event)
        {
            base.AddObject("Events", @event);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Invitations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInvitations(Invitation invitation)
        {
            base.AddObject("Invitations", invitation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Locations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLocations(Location location)
        {
            base.AddObject("Locations", location);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Meetings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMeetings(Meeting meeting)
        {
            base.AddObject("Meetings", meeting);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MeetingFiles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMeetingFiles(MeetingFile meetingFile)
        {
            base.AddObject("MeetingFiles", meetingFile);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MeetingLocations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMeetingLocations(MeetingLocation meetingLocation)
        {
            base.AddObject("MeetingLocations", meetingLocation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MeetingParticipants EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMeetingParticipants(MeetingParticipant meetingParticipant)
        {
            base.AddObject("MeetingParticipants", meetingParticipant);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MeetingResources EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMeetingResources(MeetingResource meetingResource)
        {
            base.AddObject("MeetingResources", meetingResource);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MeetingTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMeetingTypes(MeetingType meetingType)
        {
            base.AddObject("MeetingTypes", meetingType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the NotificationHeaders EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToNotificationHeaders(NotificationHeader notificationHeader)
        {
            base.AddObject("NotificationHeaders", notificationHeader);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the NotInfoes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToNotInfoes(NotInfo notInfo)
        {
            base.AddObject("NotInfoes", notInfo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Projects EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProjects(Project project)
        {
            base.AddObject("Projects", project);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProjectFiles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProjectFiles(ProjectFile projectFile)
        {
            base.AddObject("ProjectFiles", projectFile);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProjectPrivacies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProjectPrivacies(ProjectPrivacy projectPrivacy)
        {
            base.AddObject("ProjectPrivacies", projectPrivacy);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProjectUsers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProjectUsers(ProjectUser projectUser)
        {
            base.AddObject("ProjectUsers", projectUser);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Replies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToReplies(Reply reply)
        {
            base.AddObject("Replies", reply);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Resources EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToResources(Resource resource)
        {
            base.AddObject("Resources", resource);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the sysdiagrams EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTosysdiagrams(sysdiagram sysdiagram)
        {
            base.AddObject("sysdiagrams", sysdiagram);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TaskUsers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTaskUsers(TaskUser taskUser)
        {
            base.AddObject("TaskUsers", taskUser);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserProfiles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserProfiles(UserProfile userProfile)
        {
            base.AddObject("UserProfiles", userProfile);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FilePrivacies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFilePrivacies(FilePrivacy filePrivacy)
        {
            base.AddObject("FilePrivacies", filePrivacy);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DFiles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDFiles(DFile dFile)
        {
            base.AddObject("DFiles", dFile);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TaskAssigns EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTaskAssigns(TaskAssign taskAssign)
        {
            base.AddObject("TaskAssigns", taskAssign);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="boxModel", Name="AgendaPrivacy")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AgendaPrivacy : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AgendaPrivacy object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="agendaID">Initial value of the AgendaID property.</param>
        /// <param name="partiID">Initial value of the PartiID property.</param>
        /// <param name="canSee">Initial value of the CanSee property.</param>
        public static AgendaPrivacy CreateAgendaPrivacy(global::System.Int32 id, global::System.Int32 agendaID, global::System.Int32 partiID, global::System.Boolean canSee)
        {
            AgendaPrivacy agendaPrivacy = new AgendaPrivacy();
            agendaPrivacy.ID = id;
            agendaPrivacy.AgendaID = agendaID;
            agendaPrivacy.PartiID = partiID;
            agendaPrivacy.CanSee = canSee;
            return agendaPrivacy;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AgendaID
        {
            get
            {
                return _AgendaID;
            }
            set
            {
                OnAgendaIDChanging(value);
                ReportPropertyChanging("AgendaID");
                _AgendaID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AgendaID");
                OnAgendaIDChanged();
            }
        }
        private global::System.Int32 _AgendaID;
        partial void OnAgendaIDChanging(global::System.Int32 value);
        partial void OnAgendaIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PartiID
        {
            get
            {
                return _PartiID;
            }
            set
            {
                OnPartiIDChanging(value);
                ReportPropertyChanging("PartiID");
                _PartiID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PartiID");
                OnPartiIDChanged();
            }
        }
        private global::System.Int32 _PartiID;
        partial void OnPartiIDChanging(global::System.Int32 value);
        partial void OnPartiIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean CanSee
        {
            get
            {
                return _CanSee;
            }
            set
            {
                OnCanSeeChanging(value);
                ReportPropertyChanging("CanSee");
                _CanSee = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CanSee");
                OnCanSeeChanged();
            }
        }
        private global::System.Boolean _CanSee;
        partial void OnCanSeeChanging(global::System.Boolean value);
        partial void OnCanSeeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("boxModel", "FK_AgendaPrivacy_Agenda", "Agenda")]
        public Agendum Agendum
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Agendum>("boxModel.FK_AgendaPrivacy_Agenda", "Agenda").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Agendum>("boxModel.FK_AgendaPrivacy_Agenda", "Agenda").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Agendum> AgendumReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Agendum>("boxModel.FK_AgendaPrivacy_Agenda", "Agenda");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Agendum>("boxModel.FK_AgendaPrivacy_Agenda", "Agenda", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("boxModel", "FK_AgendaPrivacy_MeetingParticipant", "MeetingParticipant")]
        public MeetingParticipant MeetingParticipant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MeetingParticipant>("boxModel.FK_AgendaPrivacy_MeetingParticipant", "MeetingParticipant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MeetingParticipant>("boxModel.FK_AgendaPrivacy_MeetingParticipant", "MeetingParticipant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MeetingParticipant> MeetingParticipantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MeetingParticipant>("boxModel.FK_AgendaPrivacy_MeetingParticipant", "MeetingParticipant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MeetingParticipant>("boxModel.FK_AgendaPrivacy_MeetingParticipant", "MeetingParticipant", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="boxModel", Name="Agendum")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Agendum : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Agendum object.
        /// </summary>
        /// <param name="agendaID">Initial value of the AgendaID property.</param>
        /// <param name="agendaCount">Initial value of the AgendaCount property.</param>
        /// <param name="agendaTitle">Initial value of the AgendaTitle property.</param>
        /// <param name="agendaDesc">Initial value of the AgendaDesc property.</param>
        /// <param name="meetingID">Initial value of the MeetingID property.</param>
        /// <param name="published">Initial value of the Published property.</param>
        /// <param name="privacy">Initial value of the Privacy property.</param>
        public static Agendum CreateAgendum(global::System.Int32 agendaID, global::System.String agendaCount, global::System.String agendaTitle, global::System.String agendaDesc, global::System.Int32 meetingID, global::System.Boolean published, global::System.String privacy)
        {
            Agendum agendum = new Agendum();
            agendum.AgendaID = agendaID;
            agendum.AgendaCount = agendaCount;
            agendum.AgendaTitle = agendaTitle;
            agendum.AgendaDesc = agendaDesc;
            agendum.MeetingID = meetingID;
            agendum.Published = published;
            agendum.Privacy = privacy;
            return agendum;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AgendaID
        {
            get
            {
                return _AgendaID;
            }
            set
            {
                if (_AgendaID != value)
                {
                    OnAgendaIDChanging(value);
                    ReportPropertyChanging("AgendaID");
                    _AgendaID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AgendaID");
                    OnAgendaIDChanged();
                }
            }
        }
        private global::System.Int32 _AgendaID;
        partial void OnAgendaIDChanging(global::System.Int32 value);
        partial void OnAgendaIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AgendaCount
        {
            get
            {
                return _AgendaCount;
            }
            set
            {
                OnAgendaCountChanging(value);
                ReportPropertyChanging("AgendaCount");
                _AgendaCount = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AgendaCount");
                OnAgendaCountChanged();
            }
        }
        private global::System.String _AgendaCount;
        partial void OnAgendaCountChanging(global::System.String value);
        partial void OnAgendaCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AgendaTitle
        {
            get
            {
                return _AgendaTitle;
            }
            set
            {
                OnAgendaTitleChanging(value);
                ReportPropertyChanging("AgendaTitle");
                _AgendaTitle = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AgendaTitle");
                OnAgendaTitleChanged();
            }
        }
        private global::System.String _AgendaTitle;
        partial void OnAgendaTitleChanging(global::System.String value);
        partial void OnAgendaTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AgendaDesc
        {
            get
            {
                return _AgendaDesc;
            }
            set
            {
                OnAgendaDescChanging(value);
                ReportPropertyChanging("AgendaDesc");
                _AgendaDesc = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AgendaDesc");
                OnAgendaDescChanged();
            }
        }
        private global::System.String _AgendaDesc;
        partial void OnAgendaDescChanging(global::System.String value);
        partial void OnAgendaDescChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MeetingID
        {
            get
            {
                return _MeetingID;
            }
            set
            {
                OnMeetingIDChanging(value);
                ReportPropertyChanging("MeetingID");
                _MeetingID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MeetingID");
                OnMeetingIDChanged();
            }
        }
        private global::System.Int32 _MeetingID;
        partial void OnMeetingIDChanging(global::System.Int32 value);
        partial void OnMeetingIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Published
        {
            get
            {
                return _Published;
            }
            set
            {
                OnPublishedChanging(value);
                ReportPropertyChanging("Published");
                _Published = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Published");
                OnPublishedChanged();
            }
        }
        private global::System.Boolean _Published;
        partial void OnPublishedChanging(global::System.Boolean value);
        partial void OnPublishedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SubAgenda
        {
            get
            {
                return _SubAgenda;
            }
            set
            {
                OnSubAgendaChanging(value);
                ReportPropertyChanging("SubAgenda");
                _SubAgenda = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SubAgenda");
                OnSubAgendaChanged();
            }
        }
        private Nullable<global::System.Int32> _SubAgenda;
        partial void OnSubAgendaChanging(Nullable<global::System.Int32> value);
        partial void OnSubAgendaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Privacy
        {
            get
            {
                return _Privacy;
            }
            set
            {
                OnPrivacyChanging(value);
                ReportPropertyChanging("Privacy");
                _Privacy = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Privacy");
                OnPrivacyChanged();
            }
        }
        private global::System.String _Privacy;
        partial void OnPrivacyChanging(global::System.String value);
        partial void OnPrivacyChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("boxModel", "FK_Agenda_Agenda", "Agenda1")]
        public EntityCollection<Agendum> Agenda1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Agendum>("boxModel.FK_Agenda_Agenda", "Agenda1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Agendum>("boxModel.FK_Agenda_Agenda", "Agenda1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("boxModel", "FK_Agenda_Agenda", "Agenda")]
        public Agendum Agendum1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Agendum>("boxModel.FK_Agenda_Agenda", "Agenda").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Agendum>("boxModel.FK_Agenda_Agenda", "Agenda").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Agendum> Agendum1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Agendum>("boxModel.FK_Agenda_Agenda", "Agenda");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Agendum>("boxModel.FK_Agenda_Agenda", "Agenda", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("boxModel", "FK_Agenda_Meeting", "Meeting")]
        public Meeting Meeting
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Meeting>("boxModel.FK_Agenda_Meeting", "Meeting").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Meeting>("boxModel.FK_Agenda_Meeting", "Meeting").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Meeting> MeetingReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Meeting>("boxModel.FK_Agenda_Meeting", "Meeting");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Meeting>("boxModel.FK_Agenda_Meeting", "Meeting", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("boxModel", "FK_AgendaPrivacy_Agenda", "AgendaPrivacy")]
        public EntityCollection<AgendaPrivacy> AgendaPrivacies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AgendaPrivacy>("boxModel.FK_AgendaPrivacy_Agenda", "AgendaPrivacy");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AgendaPrivacy>("boxModel.FK_AgendaPrivacy_Agenda", "AgendaPrivacy", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("boxModel", "FK_Discussion_Agenda", "Discussion")]
        public EntityCollection<Discussion> Discussions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Discussion>("boxModel.FK_Discussion_Agenda", "Discussion");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Discussion>("boxModel.FK_Discussion_Agenda", "Discussion", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("boxModel", "FK_NotificationHeader_Agenda", "NotificationHeader")]
        public EntityCollection<NotificationHeader> NotificationHeaders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<NotificationHeader>("boxModel.FK_NotificationHeader_Agenda", "NotificationHeader");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<NotificationHeader>("boxModel.FK_NotificationHeader_Agenda", "NotificationHeader", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("boxModel", "FK_TaskAssign_Agenda", "TaskAssign")]
        public EntityCollection<TaskAssign> TaskAssigns
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TaskAssign>("boxModel.FK_TaskAssign_Agenda", "TaskAssign");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TaskAssign>("boxModel.FK_TaskAssign_Agenda", "TaskAssign", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="boxModel", Name="Comment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Comment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Comment object.
        /// </summary>
        /// <param name="commentID">Initial value of the CommentID property.</param>
        /// <param name="userID">Initial value of the UserID property.</param>
        /// <param name="text">Initial value of the Text property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        public static Comment CreateComment(global::System.Int32 commentID, global::System.Int32 userID, global::System.String text, global::System.DateTime date)
        {
            Comment comment = new Comment();
            comment.CommentID = commentID;
            comment.UserID = userID;
            comment.Text = text;
            comment.Date = date;
            return comment;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CommentID
        {
            get
            {
                return _CommentID;
            }
            set
            {
                if (_CommentID != value)
                {
                    OnCommentIDChanging(value);
                    ReportPropertyChanging("CommentID");
                    _CommentID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CommentID");
                    OnCommentIDChanged();
                }
            }
        }
        private global::System.Int32 _CommentID;
        partial void OnCommentIDChanging(global::System.Int32 value);
        partial void OnCommentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.Int32 _UserID;
        partial void OnUserIDChanging(global::System.Int32 value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private global::System.String _Text;
        partial void OnTextChanging(global::System.String value);
        partial void OnTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("boxModel", "FK_Comment_UserProfile", "UserProfile")]
        public UserProfile UserProfile
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserProfile>("boxModel.FK_Comment_UserProfile", "UserProfile").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserProfile>("boxModel.FK_Comment_UserProfile", "UserProfile").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserProfile> UserProfileReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserProfile>("boxModel.FK_Comment_UserProfile", "UserProfile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserProfile>("boxModel.FK_Comment_UserProfile", "UserProfile", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="boxModel", Name="DFile")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DFile : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DFile object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="filename">Initial value of the Filename property.</param>
        /// <param name="dateAdded">Initial value of the DateAdded property.</param>
        /// <param name="upFolder">Initial value of the UpFolder property.</param>
        /// <param name="directory">Initial value of the Directory property.</param>
        /// <param name="fullName">Initial value of the FullName property.</param>
        /// <param name="creator">Initial value of the Creator property.</param>
        /// <param name="privacy">Initial value of the Privacy property.</param>
        /// <param name="locked">Initial value of the Locked property.</param>
        public static DFile CreateDFile(global::System.Int32 id, global::System.String filename, global::System.DateTime dateAdded, global::System.String upFolder, global::System.String directory, global::System.String fullName, global::System.Int32 creator, global::System.String privacy, global::System.Boolean locked)
        {
            DFile dFile = new DFile();
            dFile.ID = id;
            dFile.Filename = filename;
            dFile.DateAdded = dateAdded;
            dFile.UpFolder = upFolder;
            dFile.Directory = directory;
            dFile.FullName = fullName;
            dFile.Creator = creator;
            dFile.Privacy = privacy;
            dFile.Locked = locked;
            return dFile;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Filename
        {
            get
            {
                return _Filename;
            }
            set
            {
                OnFilenameChanging(value);
                ReportPropertyChanging("Filename");
                _Filename = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Filename");
                OnFilenameChanged();
            }
        }
        private global::System.String _Filename;
        partial void OnFilenameChanging(global::System.String value);
        partial void OnFilenameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateAdded
        {
            get
            {
                return _DateAdded;
            }
            set
            {
                OnDateAddedChanging(value);
                ReportPropertyChanging("DateAdded");
                _DateAdded = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateAdded");
                OnDateAddedChanged();
            }
        }
        private global::System.DateTime _DateAdded;
        partial void OnDateAddedChanging(global::System.DateTime value);
        partial void OnDateAddedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UpFolder
        {
            get
            {
                return _UpFolder;
            }
            set
            {
                OnUpFolderChanging(value);
                ReportPropertyChanging("UpFolder");
                _UpFolder = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UpFolder");
                OnUpFolderChanged();
            }
        }
        private global::System.String _UpFolder;
        partial void OnUpFolderChanging(global::System.String value);
        partial void OnUpFolderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Directory
        {
            get
            {
                return _Directory;
            }
            set
            {
                OnDirectoryChanging(value);
                ReportPropertyChanging("Directory");
                _Directory = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Directory");
                OnDirectoryChanged();
            }
        }
        private global::System.String _Directory;
        partial void OnDirectoryChanging(global::System.String value);
        partial void OnDirectoryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FullName
        {
            get
            {
                return _FullName;
            }
            set
            {
                OnFullNameChanging(value);
                ReportPropertyChanging("FullName");
                _FullName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FullName");
                OnFullNameChanged();
            }
        }
        private global::System.String _FullName;
        partial void OnFullNameChanging(global::System.String value);
        partial void OnFullNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                OnCreatorChanging(value);
                ReportPropertyChanging("Creator");
                _Creator = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Creator");
                OnCreatorChanged();
            }
        }
        private global::System.Int32 _Creator;
        partial void OnCreatorChanging(global::System.Int32 value);
        partial void OnCreatorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Privacy
        {
            get
            {
                return _Privacy;
            }
            set
            {
                OnPrivacyChanging(value);
                ReportPropertyChanging("Privacy");
                _Privacy = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Privacy");
                OnPrivacyChanged();
            }
        }
        private global::System.String _Privacy;
        partial void OnPrivacyChanging(global::System.String value);
        partial void OnPrivacyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Locked
        {
            get
            {
                return _Locked;
            }
            set
            {
                OnLockedChanging(value);
                ReportPropertyChanging("Locked");
                _Locked = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Locked");
                OnLockedChanged();
            }
        }
        private global::System.Boolean _Locked;
        partial void OnLockedChanging(global::System.Boolean value);
        partial void OnLockedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("boxModel", "FK_DFile_UserProfile", "UserProfile")]
        public UserProfile UserProfile
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserProfile>("boxModel.FK_DFile_UserProfile", "UserProfile").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserProfile>("boxModel.FK_DFile_UserProfile", "UserProfile").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserProfile> UserProfileReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserProfile>("boxModel.FK_DFile_UserProfile", "UserProfile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserProfile>("boxModel.FK_DFile_UserProfile", "UserProfile", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("boxModel", "FK_FilePrivacy_DFile", "FilePrivacy")]
        public EntityCollection<FilePrivacy> FilePrivacies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FilePrivacy>("boxModel.FK_FilePrivacy_DFile", "FilePrivacy");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FilePrivacy>("boxModel.FK_FilePrivacy_DFile", "FilePrivacy", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="boxModel", Name="Discussion")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Discussion : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Discussion object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="userID">Initial value of the UserID property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="text">Initial value of the Text property.</param>
        public static Discussion CreateDiscussion(global::System.Int32 id, global::System.Int32 userID, global::System.DateTime date, global::System.String title, global::System.String text)
        {
            Discussion discussion = new Discussion();
            discussion.ID = id;
            discussion.UserID = userID;
            discussion.Date = date;
            discussion.Title = title;
            discussion.Text = text;
            return discussion;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.Int32 _UserID;
        partial void OnUserIDChanging(global::System.Int32 value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private global::System.String _Text;
        partial void OnTextChanging(global::System.String value);
        partial void OnTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MeetingID
        {
            get
            {
                return _MeetingID;
            }
            set
            {
                OnMeetingIDChanging(value);
                ReportPropertyChanging("MeetingID");
                _MeetingID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MeetingID");
                OnMeetingIDChanged();
            }
        }
        private Nullable<global::System.Int32> _MeetingID;
        partial void OnMeetingIDChanging(Nullable<global::System.Int32> value);
        partial void OnMeetingIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AgendaID
        {
            get
            {
                return _AgendaID;
            }
            set
            {
                OnAgendaIDChanging(value);
                ReportPropertyChanging("AgendaID");
                _AgendaID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AgendaID");
                OnAgendaIDChanged();
            }
        }
        private Nullable<global::System.Int32> _AgendaID;
        partial void OnAgendaIDChanging(Nullable<global::System.Int32> value);
        partial void OnAgendaIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ProjectID
        {
            get
            {
                return _ProjectID;
            }
            set
            {
                OnProjectIDChanging(value);
                ReportPropertyChanging("ProjectID");
                _ProjectID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProjectID");
                OnProjectIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ProjectID;
        partial void OnProjectIDChanging(Nullable<global::System.Int32> value);
        partial void OnProjectIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FileID
        {
            get
            {
                return _FileID;
            }
            set
            {
                OnFileIDChanging(value);
                ReportPropertyChanging("FileID");
                _FileID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FileID");
                OnFileIDChanged();
            }
        }
        private Nullable<global::System.Int32> _FileID;
        partial void OnFileIDChanging(Nullable<global::System.Int32> value);
        partial void OnFileIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("boxModel", "FK_Discussion_Agenda", "Agenda")]
        public Agendum Agendum
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Agendum>("boxModel.FK_Discussion_Agenda", "Agenda").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Agendum>("boxModel.FK_Discussion_Agenda", "Agenda").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Agendum> AgendumReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Agendum>("boxModel.FK_Discussion_Agenda", "Agenda");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Agendum>("boxModel.FK_Discussion_Agenda", "Agenda", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("boxModel", "FK_Discussion_Meeting", "Meeting")]
        public Meeting Meeting
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Meeting>("boxModel.FK_Discussion_Meeting", "Meeting").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Meeting>("boxModel.FK_Discussion_Meeting", "Meeting").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Meeting> MeetingReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Meeting>("boxModel.FK_Discussion_Meeting", "Meeting");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Meeting>("boxModel.FK_Discussion_Meeting", "Meeting", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("boxModel", "FK_Discussion_UserProfile", "UserProfile")]
        public UserProfile UserProfile
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserProfile>("boxModel.FK_Discussion_UserProfile", "UserProfile").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserProfile>("boxModel.FK_Discussion_UserProfile", "UserProfile").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserProfile> UserProfileReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserProfile>("boxModel.FK_Discussion_UserProfile", "UserProfile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserProfile>("boxModel.FK_Discussion_UserProfile", "UserProfile", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("boxModel", "FK_Reply_Discussion", "Reply")]
        public EntityCollection<Reply> Replies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Reply>("boxModel.FK_Reply_Discussion", "Reply");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Reply>("boxModel.FK_Reply_Discussion", "Reply", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("boxModel", "FK_Discussion_Project", "Project")]
        public Project Project
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("boxModel.FK_Discussion_Project", "Project").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("boxModel.FK_Discussion_Project", "Project").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Project> ProjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("boxModel.FK_Discussion_Project", "Project");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Project>("boxModel.FK_Discussion_Project", "Project", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("boxModel", "FK_Discussion_ProjectFile", "ProjectFile")]
        public ProjectFile ProjectFile
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectFile>("boxModel.FK_Discussion_ProjectFile", "ProjectFile").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectFile>("boxModel.FK_Discussion_ProjectFile", "ProjectFile").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProjectFile> ProjectFileReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectFile>("boxModel.FK_Discussion_ProjectFile", "ProjectFile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProjectFile>("boxModel.FK_Discussion_ProjectFile", "ProjectFile", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("boxModel", "FK_NotificationHeader_Discussion", "NotificationHeader")]
        public EntityCollection<NotificationHeader> NotificationHeaders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<NotificationHeader>("boxModel.FK_NotificationHeader_Discussion", "NotificationHeader");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<NotificationHeader>("boxModel.FK_NotificationHeader_Discussion", "NotificationHeader", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="boxModel", Name="Event")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Event : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Event object.
        /// </summary>
        /// <param name="calendarKey">Initial value of the CalendarKey property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="startDate">Initial value of the StartDate property.</param>
        /// <param name="endDate">Initial value of the EndDate property.</param>
        /// <param name="allDayEvent">Initial value of the AllDayEvent property.</param>
        public static Event CreateEvent(global::System.Int32 calendarKey, global::System.String title, global::System.DateTime startDate, global::System.DateTime endDate, global::System.Boolean allDayEvent)
        {
            Event @event = new Event();
            @event.CalendarKey = calendarKey;
            @event.Title = title;
            @event.StartDate = startDate;
            @event.EndDate = endDate;
            @event.AllDayEvent = allDayEvent;
            return @event;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CalendarKey
        {
            get
            {
                return _CalendarKey;
            }
            set
            {
                if (_CalendarKey != value)
                {
                    OnCalendarKeyChanging(value);
                    ReportPropertyChanging("CalendarKey");
                    _CalendarKey = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CalendarKey");
                    OnCalendarKeyChanged();
                }
            }
        }
        private global::System.Int32 _CalendarKey;
        partial void OnCalendarKeyChanging(global::System.Int32 value);
        partial void OnCalendarKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private global::System.DateTime _StartDate;
        partial void OnStartDateChanging(global::System.DateTime value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private global::System.DateTime _EndDate;
        partial void OnEndDateChanging(global::System.DateTime value);
        partial void OnEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean AllDayEvent
        {
            get
            {
                return _AllDayEvent;
            }
            set
            {
                OnAllDayEventChanging(value);
                ReportPropertyChanging("AllDayEvent");
                _AllDayEvent = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AllDayEvent");
                OnAllDayEventChanged();
            }
        }
        private global::System.Boolean _AllDayEvent;
        partial void OnAllDayEventChanging(global::System.Boolean value);
        partial void OnAllDayEventChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String backgroundColor
        {
            get
            {
                return _backgroundColor;
            }
            set
            {
                OnbackgroundColorChanging(value);
                ReportPropertyChanging("backgroundColor");
                _backgroundColor = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("backgroundColor");
                OnbackgroundColorChanged();
            }
        }
        private global::System.String _backgroundColor;
        partial void OnbackgroundColorChanging(global::System.String value);
        partial void OnbackgroundColorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Evnet
        {
            get
            {
                return _Evnet;
            }
            set
            {
                OnEvnetChanging(value);
                ReportPropertyChanging("Evnet");
                _Evnet = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Evnet");
                OnEvnetChanged();
            }
        }
        private global::System.String _Evnet;
        partial void OnEvnetChanging(global::System.String value);
        partial void OnEvnetChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="boxModel", Name="FilePrivacy")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FilePrivacy : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FilePrivacy object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="userID">Initial value of the UserID property.</param>
        /// <param name="fileID">Initial value of the FileID property.</param>
        /// <param name="canSee">Initial value of the CanSee property.</param>
        public static FilePrivacy CreateFilePrivacy(global::System.Int32 id, global::System.Int32 userID, global::System.Int32 fileID, global::System.Boolean canSee)
        {
            FilePrivacy filePrivacy = new FilePrivacy();
            filePrivacy.ID = id;
            filePrivacy.UserID = userID;
            filePrivacy.FileID = fileID;
            filePrivacy.CanSee = canSee;
            return filePrivacy;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.Int32 _UserID;
        partial void OnUserIDChanging(global::System.Int32 value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FileID
        {
            get
            {
                return _FileID;
            }
            set
            {
                OnFileIDChanging(value);
                ReportPropertyChanging("FileID");
                _FileID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FileID");
                OnFileIDChanged();
            }
        }
        private global::System.Int32 _FileID;
        partial void OnFileIDChanging(global::System.Int32 value);
        partial void OnFileIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean CanSee
        {
            get
            {
                return _CanSee;
            }
            set
            {
                OnCanSeeChanging(value);
                ReportPropertyChanging("CanSee");
                _CanSee = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CanSee");
                OnCanSeeChanged();
            }
        }
        private global::System.Boolean _CanSee;
        partial void OnCanSeeChanging(global::System.Boolean value);
        partial void OnCanSeeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("boxModel", "FK_FilePrivacy_UserProfile", "UserProfile")]
        public UserProfile UserProfile
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserProfile>("boxModel.FK_FilePrivacy_UserProfile", "UserProfile").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserProfile>("boxModel.FK_FilePrivacy_UserProfile", "UserProfile").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserProfile> UserProfileReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserProfile>("boxModel.FK_FilePrivacy_UserProfile", "UserProfile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserProfile>("boxModel.FK_FilePrivacy_UserProfile", "UserProfile", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("boxModel", "FK_FilePrivacy_DFile", "DFile")]
        public DFile DFile
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DFile>("boxModel.FK_FilePrivacy_DFile", "DFile").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DFile>("boxModel.FK_FilePrivacy_DFile", "DFile").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DFile> DFileReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DFile>("boxModel.FK_FilePrivacy_DFile", "DFile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DFile>("boxModel.FK_FilePrivacy_DFile", "DFile", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="boxModel", Name="Invitation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Invitation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Invitation object.
        /// </summary>
        /// <param name="userID">Initial value of the UserID property.</param>
        /// <param name="meetingID">Initial value of the MeetingID property.</param>
        /// <param name="response">Initial value of the Response property.</param>
        /// <param name="sentDate">Initial value of the SentDate property.</param>
        public static Invitation CreateInvitation(global::System.Int32 userID, global::System.Int32 meetingID, global::System.String response, global::System.DateTime sentDate)
        {
            Invitation invitation = new Invitation();
            invitation.UserID = userID;
            invitation.MeetingID = meetingID;
            invitation.Response = response;
            invitation.SentDate = sentDate;
            return invitation;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                if (_UserID != value)
                {
                    OnUserIDChanging(value);
                    ReportPropertyChanging("UserID");
                    _UserID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserID");
                    OnUserIDChanged();
                }
            }
        }
        private global::System.Int32 _UserID;
        partial void OnUserIDChanging(global::System.Int32 value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MeetingID
        {
            get
            {
                return _MeetingID;
            }
            set
            {
                if (_MeetingID != value)
                {
                    OnMeetingIDChanging(value);
                    ReportPropertyChanging("MeetingID");
                    _MeetingID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MeetingID");
                    OnMeetingIDChanged();
                }
            }
        }
        private global::System.Int32 _MeetingID;
        partial void OnMeetingIDChanging(global::System.Int32 value);
        partial void OnMeetingIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Response
        {
            get
            {
                return _Response;
            }
            set
            {
                OnResponseChanging(value);
                ReportPropertyChanging("Response");
                _Response = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Response");
                OnResponseChanged();
            }
        }
        private global::System.String _Response;
        partial void OnResponseChanging(global::System.String value);
        partial void OnResponseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime SentDate
        {
            get
            {
                return _SentDate;
            }
            set
            {
                OnSentDateChanging(value);
                ReportPropertyChanging("SentDate");
                _SentDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SentDate");
                OnSentDateChanged();
            }
        }
        private global::System.DateTime _SentDate;
        partial void OnSentDateChanging(global::System.DateTime value);
        partial void OnSentDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ResponseDate
        {
            get
            {
                return _ResponseDate;
            }
            set
            {
                OnResponseDateChanging(value);
                ReportPropertyChanging("ResponseDate");
                _ResponseDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ResponseDate");
                OnResponseDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ResponseDate;
        partial void OnResponseDateChanging(Nullable<global::System.DateTime> value);
        partial void OnResponseDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("boxModel", "FK_Invitation_Meeting", "Meeting")]
        public Meeting Meeting
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Meeting>("boxModel.FK_Invitation_Meeting", "Meeting").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Meeting>("boxModel.FK_Invitation_Meeting", "Meeting").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Meeting> MeetingReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Meeting>("boxModel.FK_Invitation_Meeting", "Meeting");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Meeting>("boxModel.FK_Invitation_Meeting", "Meeting", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("boxModel", "FK_Invitation_UserProfile", "UserProfile")]
        public UserProfile UserProfile
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserProfile>("boxModel.FK_Invitation_UserProfile", "UserProfile").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserProfile>("boxModel.FK_Invitation_UserProfile", "UserProfile").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserProfile> UserProfileReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserProfile>("boxModel.FK_Invitation_UserProfile", "UserProfile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserProfile>("boxModel.FK_Invitation_UserProfile", "UserProfile", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="boxModel", Name="Location")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Location : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Location object.
        /// </summary>
        /// <param name="locationID">Initial value of the LocationID property.</param>
        /// <param name="locationName">Initial value of the LocationName property.</param>
        public static Location CreateLocation(global::System.Int32 locationID, global::System.String locationName)
        {
            Location location = new Location();
            location.LocationID = locationID;
            location.LocationName = locationName;
            return location;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LocationID
        {
            get
            {
                return _LocationID;
            }
            set
            {
                if (_LocationID != value)
                {
                    OnLocationIDChanging(value);
                    ReportPropertyChanging("LocationID");
                    _LocationID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LocationID");
                    OnLocationIDChanged();
                }
            }
        }
        private global::System.Int32 _LocationID;
        partial void OnLocationIDChanging(global::System.Int32 value);
        partial void OnLocationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LocationName
        {
            get
            {
                return _LocationName;
            }
            set
            {
                OnLocationNameChanging(value);
                ReportPropertyChanging("LocationName");
                _LocationName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LocationName");
                OnLocationNameChanged();
            }
        }
        private global::System.String _LocationName;
        partial void OnLocationNameChanging(global::System.String value);
        partial void OnLocationNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("boxModel", "FK_MeetingLocation_Location", "MeetingLocation")]
        public EntityCollection<MeetingLocation> MeetingLocations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MeetingLocation>("boxModel.FK_MeetingLocation_Location", "MeetingLocation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MeetingLocation>("boxModel.FK_MeetingLocation_Location", "MeetingLocation", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="boxModel", Name="Meeting")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Meeting : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Meeting object.
        /// </summary>
        /// <param name="meetingID">Initial value of the MeetingID property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        /// <param name="meetingTitle">Initial value of the MeetingTitle property.</param>
        /// <param name="meetingDesc">Initial value of the MeetingDesc property.</param>
        /// <param name="startDate">Initial value of the StartDate property.</param>
        /// <param name="endDate">Initial value of the EndDate property.</param>
        /// <param name="mee">Initial value of the Mee property.</param>
        /// <param name="app">Initial value of the App property.</param>
        /// <param name="cal">Initial value of the Cal property.</param>
        /// <param name="allDay">Initial value of the AllDay property.</param>
        public static Meeting CreateMeeting(global::System.Int32 meetingID, global::System.Int32 type, global::System.String meetingTitle, global::System.String meetingDesc, global::System.DateTime startDate, global::System.DateTime endDate, global::System.Boolean mee, global::System.Boolean app, global::System.Boolean cal, global::System.Boolean allDay)
        {
            Meeting meeting = new Meeting();
            meeting.MeetingID = meetingID;
            meeting.Type = type;
            meeting.MeetingTitle = meetingTitle;
            meeting.MeetingDesc = meetingDesc;
            meeting.StartDate = startDate;
            meeting.EndDate = endDate;
            meeting.Mee = mee;
            meeting.App = app;
            meeting.Cal = cal;
            meeting.AllDay = allDay;
            return meeting;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MeetingID
        {
            get
            {
                return _MeetingID;
            }
            set
            {
                if (_MeetingID != value)
                {
                    OnMeetingIDChanging(value);
                    ReportPropertyChanging("MeetingID");
                    _MeetingID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MeetingID");
                    OnMeetingIDChanged();
                }
            }
        }
        private global::System.Int32 _MeetingID;
        partial void OnMeetingIDChanging(global::System.Int32 value);
        partial void OnMeetingIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.Int32 _Type;
        partial void OnTypeChanging(global::System.Int32 value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MeetingTitle
        {
            get
            {
                return _MeetingTitle;
            }
            set
            {
                OnMeetingTitleChanging(value);
                ReportPropertyChanging("MeetingTitle");
                _MeetingTitle = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MeetingTitle");
                OnMeetingTitleChanged();
            }
        }
        private global::System.String _MeetingTitle;
        partial void OnMeetingTitleChanging(global::System.String value);
        partial void OnMeetingTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MeetingDesc
        {
            get
            {
                return _MeetingDesc;
            }
            set
            {
                OnMeetingDescChanging(value);
                ReportPropertyChanging("MeetingDesc");
                _MeetingDesc = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MeetingDesc");
                OnMeetingDescChanged();
            }
        }
        private global::System.String _MeetingDesc;
        partial void OnMeetingDescChanging(global::System.String value);
        partial void OnMeetingDescChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private global::System.DateTime _StartDate;
        partial void OnStartDateChanging(global::System.DateTime value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private global::System.DateTime _EndDate;
        partial void OnEndDateChanging(global::System.DateTime value);
        partial void OnEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Mee
        {
            get
            {
                return _Mee;
            }
            set
            {
                OnMeeChanging(value);
                ReportPropertyChanging("Mee");
                _Mee = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Mee");
                OnMeeChanged();
            }
        }
        private global::System.Boolean _Mee;
        partial void OnMeeChanging(global::System.Boolean value);
        partial void OnMeeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean App
        {
            get
            {
                return _App;
            }
            set
            {
                OnAppChanging(value);
                ReportPropertyChanging("App");
                _App = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("App");
                OnAppChanged();
            }
        }
        private global::System.Boolean _App;
        partial void OnAppChanging(global::System.Boolean value);
        partial void OnAppChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Cal
        {
            get
            {
                return _Cal;
            }
            set
            {
                OnCalChanging(value);
                ReportPropertyChanging("Cal");
                _Cal = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Cal");
                OnCalChanged();
            }
        }
        private global::System.Boolean _Cal;
        partial void OnCalChanging(global::System.Boolean value);
        partial void OnCalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean AllDay
        {
            get
            {
                return _AllDay;
            }
            set
            {
                OnAllDayChanging(value);
                ReportPropertyChanging("AllDay");
                _AllDay = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AllDay");
                OnAllDayChanged();
            }
        }
        private global::System.Boolean _AllDay;
        partial void OnAllDayChanging(global::System.Boolean value);
        partial void OnAllDayChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("boxModel", "FK_Agenda_Meeting", "Agenda")]
        public EntityCollection<Agendum> Agenda
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Agendum>("boxModel.FK_Agenda_Meeting", "Agenda");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Agendum>("boxModel.FK_Agenda_Meeting", "Agenda", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("boxModel", "FK_Discussion_Meeting", "Discussion")]
        public EntityCollection<Discussion> Discussions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Discussion>("boxModel.FK_Discussion_Meeting", "Discussion");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Discussion>("boxModel.FK_Discussion_Meeting", "Discussion", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("boxModel", "FK_Invitation_Meeting", "Invitation")]
        public EntityCollection<Invitation> Invitations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Invitation>("boxModel.FK_Invitation_Meeting", "Invitation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Invitation>("boxModel.FK_Invitation_Meeting", "Invitation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("boxModel", "FK_Meeting_MeetingType", "MeetingType")]
        public MeetingType MeetingType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MeetingType>("boxModel.FK_Meeting_MeetingType", "MeetingType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MeetingType>("boxModel.FK_Meeting_MeetingType", "MeetingType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MeetingType> MeetingTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MeetingType>("boxModel.FK_Meeting_MeetingType", "MeetingType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MeetingType>("boxModel.FK_Meeting_MeetingType", "MeetingType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("boxModel", "FK_MeetingFile_Meeting", "MeetingFile")]
        public EntityCollection<MeetingFile> MeetingFiles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MeetingFile>("boxModel.FK_MeetingFile_Meeting", "MeetingFile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MeetingFile>("boxModel.FK_MeetingFile_Meeting", "MeetingFile", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("boxModel", "FK_MeetingLocation_Meeting", "MeetingLocation")]
        public EntityCollection<MeetingLocation> MeetingLocations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MeetingLocation>("boxModel.FK_MeetingLocation_Meeting", "MeetingLocation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MeetingLocation>("boxModel.FK_MeetingLocation_Meeting", "MeetingLocation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("boxModel", "FK_MeetingParticipant_Meeting", "MeetingParticipant")]
        public EntityCollection<MeetingParticipant> MeetingParticipants
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MeetingParticipant>("boxModel.FK_MeetingParticipant_Meeting", "MeetingParticipant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MeetingParticipant>("boxModel.FK_MeetingParticipant_Meeting", "MeetingParticipant", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("boxModel", "FK_MeetingResource_Meeting", "MeetingResource")]
        public EntityCollection<MeetingResource> MeetingResources
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MeetingResource>("boxModel.FK_MeetingResource_Meeting", "MeetingResource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MeetingResource>("boxModel.FK_MeetingResource_Meeting", "MeetingResource", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("boxModel", "FK_NotificationHeader_Meeting", "NotificationHeader")]
        public EntityCollection<NotificationHeader> NotificationHeaders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<NotificationHeader>("boxModel.FK_NotificationHeader_Meeting", "NotificationHeader");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<NotificationHeader>("boxModel.FK_NotificationHeader_Meeting", "NotificationHeader", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("boxModel", "FK_TaskAssign_Meeting", "TaskAssign")]
        public EntityCollection<TaskAssign> TaskAssigns
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TaskAssign>("boxModel.FK_TaskAssign_Meeting", "TaskAssign");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TaskAssign>("boxModel.FK_TaskAssign_Meeting", "TaskAssign", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="boxModel", Name="MeetingFile")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MeetingFile : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MeetingFile object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="meetingID">Initial value of the MeetingID property.</param>
        /// <param name="dateAdded">Initial value of the DateAdded property.</param>
        public static MeetingFile CreateMeetingFile(global::System.Int32 id, global::System.Int32 meetingID, global::System.DateTime dateAdded)
        {
            MeetingFile meetingFile = new MeetingFile();
            meetingFile.ID = id;
            meetingFile.MeetingID = meetingID;
            meetingFile.DateAdded = dateAdded;
            return meetingFile;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MeetingID
        {
            get
            {
                return _MeetingID;
            }
            set
            {
                OnMeetingIDChanging(value);
                ReportPropertyChanging("MeetingID");
                _MeetingID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MeetingID");
                OnMeetingIDChanged();
            }
        }
        private global::System.Int32 _MeetingID;
        partial void OnMeetingIDChanging(global::System.Int32 value);
        partial void OnMeetingIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateAdded
        {
            get
            {
                return _DateAdded;
            }
            set
            {
                OnDateAddedChanging(value);
                ReportPropertyChanging("DateAdded");
                _DateAdded = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateAdded");
                OnDateAddedChanged();
            }
        }
        private global::System.DateTime _DateAdded;
        partial void OnDateAddedChanging(global::System.DateTime value);
        partial void OnDateAddedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("boxModel", "FK_MeetingFile_Meeting", "Meeting")]
        public Meeting Meeting
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Meeting>("boxModel.FK_MeetingFile_Meeting", "Meeting").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Meeting>("boxModel.FK_MeetingFile_Meeting", "Meeting").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Meeting> MeetingReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Meeting>("boxModel.FK_MeetingFile_Meeting", "Meeting");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Meeting>("boxModel.FK_MeetingFile_Meeting", "Meeting", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="boxModel", Name="MeetingLocation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MeetingLocation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MeetingLocation object.
        /// </summary>
        /// <param name="locationID">Initial value of the LocationID property.</param>
        /// <param name="meetingID">Initial value of the MeetingID property.</param>
        public static MeetingLocation CreateMeetingLocation(global::System.Int32 locationID, global::System.Int32 meetingID)
        {
            MeetingLocation meetingLocation = new MeetingLocation();
            meetingLocation.LocationID = locationID;
            meetingLocation.MeetingID = meetingID;
            return meetingLocation;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LocationID
        {
            get
            {
                return _LocationID;
            }
            set
            {
                if (_LocationID != value)
                {
                    OnLocationIDChanging(value);
                    ReportPropertyChanging("LocationID");
                    _LocationID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LocationID");
                    OnLocationIDChanged();
                }
            }
        }
        private global::System.Int32 _LocationID;
        partial void OnLocationIDChanging(global::System.Int32 value);
        partial void OnLocationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MeetingID
        {
            get
            {
                return _MeetingID;
            }
            set
            {
                if (_MeetingID != value)
                {
                    OnMeetingIDChanging(value);
                    ReportPropertyChanging("MeetingID");
                    _MeetingID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MeetingID");
                    OnMeetingIDChanged();
                }
            }
        }
        private global::System.Int32 _MeetingID;
        partial void OnMeetingIDChanging(global::System.Int32 value);
        partial void OnMeetingIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _StartDate;
        partial void OnStartDateChanging(Nullable<global::System.DateTime> value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> StartTime
        {
            get
            {
                return _StartTime;
            }
            set
            {
                OnStartTimeChanging(value);
                ReportPropertyChanging("StartTime");
                _StartTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartTime");
                OnStartTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _StartTime;
        partial void OnStartTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnStartTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndTime
        {
            get
            {
                return _EndTime;
            }
            set
            {
                OnEndTimeChanging(value);
                ReportPropertyChanging("EndTime");
                _EndTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndTime");
                OnEndTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndTime;
        partial void OnEndTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnEndTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndDate;
        partial void OnEndDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEndDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("boxModel", "FK_MeetingLocation_Location", "Location")]
        public Location Location
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("boxModel.FK_MeetingLocation_Location", "Location").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("boxModel.FK_MeetingLocation_Location", "Location").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Location> LocationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("boxModel.FK_MeetingLocation_Location", "Location");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Location>("boxModel.FK_MeetingLocation_Location", "Location", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("boxModel", "FK_MeetingLocation_Meeting", "Meeting")]
        public Meeting Meeting
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Meeting>("boxModel.FK_MeetingLocation_Meeting", "Meeting").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Meeting>("boxModel.FK_MeetingLocation_Meeting", "Meeting").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Meeting> MeetingReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Meeting>("boxModel.FK_MeetingLocation_Meeting", "Meeting");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Meeting>("boxModel.FK_MeetingLocation_Meeting", "Meeting", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="boxModel", Name="MeetingParticipant")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MeetingParticipant : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MeetingParticipant object.
        /// </summary>
        /// <param name="meetingParti">Initial value of the MeetingParti property.</param>
        /// <param name="meetingID">Initial value of the MeetingID property.</param>
        /// <param name="userID">Initial value of the UserID property.</param>
        /// <param name="response">Initial value of the Response property.</param>
        /// <param name="role">Initial value of the Role property.</param>
        /// <param name="note">Initial value of the Note property.</param>
        public static MeetingParticipant CreateMeetingParticipant(global::System.Int32 meetingParti, global::System.Int32 meetingID, global::System.Int32 userID, global::System.String response, global::System.String role, global::System.String note)
        {
            MeetingParticipant meetingParticipant = new MeetingParticipant();
            meetingParticipant.MeetingParti = meetingParti;
            meetingParticipant.MeetingID = meetingID;
            meetingParticipant.UserID = userID;
            meetingParticipant.Response = response;
            meetingParticipant.Role = role;
            meetingParticipant.Note = note;
            return meetingParticipant;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MeetingParti
        {
            get
            {
                return _MeetingParti;
            }
            set
            {
                if (_MeetingParti != value)
                {
                    OnMeetingPartiChanging(value);
                    ReportPropertyChanging("MeetingParti");
                    _MeetingParti = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MeetingParti");
                    OnMeetingPartiChanged();
                }
            }
        }
        private global::System.Int32 _MeetingParti;
        partial void OnMeetingPartiChanging(global::System.Int32 value);
        partial void OnMeetingPartiChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MeetingID
        {
            get
            {
                return _MeetingID;
            }
            set
            {
                OnMeetingIDChanging(value);
                ReportPropertyChanging("MeetingID");
                _MeetingID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MeetingID");
                OnMeetingIDChanged();
            }
        }
        private global::System.Int32 _MeetingID;
        partial void OnMeetingIDChanging(global::System.Int32 value);
        partial void OnMeetingIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.Int32 _UserID;
        partial void OnUserIDChanging(global::System.Int32 value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Response
        {
            get
            {
                return _Response;
            }
            set
            {
                OnResponseChanging(value);
                ReportPropertyChanging("Response");
                _Response = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Response");
                OnResponseChanged();
            }
        }
        private global::System.String _Response;
        partial void OnResponseChanging(global::System.String value);
        partial void OnResponseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Role
        {
            get
            {
                return _Role;
            }
            set
            {
                OnRoleChanging(value);
                ReportPropertyChanging("Role");
                _Role = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Role");
                OnRoleChanged();
            }
        }
        private global::System.String _Role;
        partial void OnRoleChanging(global::System.String value);
        partial void OnRoleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Note
        {
            get
            {
                return _Note;
            }
            set
            {
                OnNoteChanging(value);
                ReportPropertyChanging("Note");
                _Note = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Note");
                OnNoteChanged();
            }
        }
        private global::System.String _Note;
        partial void OnNoteChanging(global::System.String value);
        partial void OnNoteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> InvitationDate
        {
            get
            {
                return _InvitationDate;
            }
            set
            {
                OnInvitationDateChanging(value);
                ReportPropertyChanging("InvitationDate");
                _InvitationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InvitationDate");
                OnInvitationDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _InvitationDate;
        partial void OnInvitationDateChanging(Nullable<global::System.DateTime> value);
        partial void OnInvitationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ResponseDate
        {
            get
            {
                return _ResponseDate;
            }
            set
            {
                OnResponseDateChanging(value);
                ReportPropertyChanging("ResponseDate");
                _ResponseDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ResponseDate");
                OnResponseDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ResponseDate;
        partial void OnResponseDateChanging(Nullable<global::System.DateTime> value);
        partial void OnResponseDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("boxModel", "FK_AgendaPrivacy_MeetingParticipant", "AgendaPrivacy")]
        public EntityCollection<AgendaPrivacy> AgendaPrivacies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AgendaPrivacy>("boxModel.FK_AgendaPrivacy_MeetingParticipant", "AgendaPrivacy");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AgendaPrivacy>("boxModel.FK_AgendaPrivacy_MeetingParticipant", "AgendaPrivacy", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("boxModel", "FK_MeetingParticipant_Meeting", "Meeting")]
        public Meeting Meeting
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Meeting>("boxModel.FK_MeetingParticipant_Meeting", "Meeting").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Meeting>("boxModel.FK_MeetingParticipant_Meeting", "Meeting").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Meeting> MeetingReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Meeting>("boxModel.FK_MeetingParticipant_Meeting", "Meeting");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Meeting>("boxModel.FK_MeetingParticipant_Meeting", "Meeting", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("boxModel", "FK_MeetingParticipant_UserProfile", "UserProfile")]
        public UserProfile UserProfile
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserProfile>("boxModel.FK_MeetingParticipant_UserProfile", "UserProfile").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserProfile>("boxModel.FK_MeetingParticipant_UserProfile", "UserProfile").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserProfile> UserProfileReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserProfile>("boxModel.FK_MeetingParticipant_UserProfile", "UserProfile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserProfile>("boxModel.FK_MeetingParticipant_UserProfile", "UserProfile", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="boxModel", Name="MeetingResource")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MeetingResource : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MeetingResource object.
        /// </summary>
        /// <param name="meetingID">Initial value of the MeetingID property.</param>
        /// <param name="resourceID">Initial value of the ResourceID property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        public static MeetingResource CreateMeetingResource(global::System.Int32 meetingID, global::System.Int32 resourceID, global::System.Int32 quantity)
        {
            MeetingResource meetingResource = new MeetingResource();
            meetingResource.MeetingID = meetingID;
            meetingResource.ResourceID = resourceID;
            meetingResource.Quantity = quantity;
            return meetingResource;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MeetingID
        {
            get
            {
                return _MeetingID;
            }
            set
            {
                if (_MeetingID != value)
                {
                    OnMeetingIDChanging(value);
                    ReportPropertyChanging("MeetingID");
                    _MeetingID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MeetingID");
                    OnMeetingIDChanged();
                }
            }
        }
        private global::System.Int32 _MeetingID;
        partial void OnMeetingIDChanging(global::System.Int32 value);
        partial void OnMeetingIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ResourceID
        {
            get
            {
                return _ResourceID;
            }
            set
            {
                if (_ResourceID != value)
                {
                    OnResourceIDChanging(value);
                    ReportPropertyChanging("ResourceID");
                    _ResourceID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ResourceID");
                    OnResourceIDChanged();
                }
            }
        }
        private global::System.Int32 _ResourceID;
        partial void OnResourceIDChanging(global::System.Int32 value);
        partial void OnResourceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Int32 _Quantity;
        partial void OnQuantityChanging(global::System.Int32 value);
        partial void OnQuantityChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("boxModel", "FK_MeetingResource_Meeting", "Meeting")]
        public Meeting Meeting
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Meeting>("boxModel.FK_MeetingResource_Meeting", "Meeting").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Meeting>("boxModel.FK_MeetingResource_Meeting", "Meeting").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Meeting> MeetingReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Meeting>("boxModel.FK_MeetingResource_Meeting", "Meeting");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Meeting>("boxModel.FK_MeetingResource_Meeting", "Meeting", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("boxModel", "FK_MeetingResource_Resource", "Resource")]
        public Resource Resource
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Resource>("boxModel.FK_MeetingResource_Resource", "Resource").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Resource>("boxModel.FK_MeetingResource_Resource", "Resource").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Resource> ResourceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Resource>("boxModel.FK_MeetingResource_Resource", "Resource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Resource>("boxModel.FK_MeetingResource_Resource", "Resource", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="boxModel", Name="MeetingType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MeetingType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MeetingType object.
        /// </summary>
        /// <param name="catID">Initial value of the CatID property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        public static MeetingType CreateMeetingType(global::System.Int32 catID, global::System.String type)
        {
            MeetingType meetingType = new MeetingType();
            meetingType.CatID = catID;
            meetingType.Type = type;
            return meetingType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CatID
        {
            get
            {
                return _CatID;
            }
            set
            {
                if (_CatID != value)
                {
                    OnCatIDChanging(value);
                    ReportPropertyChanging("CatID");
                    _CatID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CatID");
                    OnCatIDChanged();
                }
            }
        }
        private global::System.Int32 _CatID;
        partial void OnCatIDChanging(global::System.Int32 value);
        partial void OnCatIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("boxModel", "FK_Meeting_MeetingType", "Meeting")]
        public EntityCollection<Meeting> Meetings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Meeting>("boxModel.FK_Meeting_MeetingType", "Meeting");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Meeting>("boxModel.FK_Meeting_MeetingType", "Meeting", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="boxModel", Name="NotificationHeader")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class NotificationHeader : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new NotificationHeader object.
        /// </summary>
        /// <param name="notID">Initial value of the NotID property.</param>
        /// <param name="notType">Initial value of the NotType property.</param>
        /// <param name="notDate">Initial value of the NotDate property.</param>
        /// <param name="notCreator">Initial value of the NotCreator property.</param>
        public static NotificationHeader CreateNotificationHeader(global::System.Int32 notID, global::System.String notType, global::System.DateTime notDate, global::System.Int32 notCreator)
        {
            NotificationHeader notificationHeader = new NotificationHeader();
            notificationHeader.NotID = notID;
            notificationHeader.NotType = notType;
            notificationHeader.NotDate = notDate;
            notificationHeader.NotCreator = notCreator;
            return notificationHeader;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NotID
        {
            get
            {
                return _NotID;
            }
            set
            {
                if (_NotID != value)
                {
                    OnNotIDChanging(value);
                    ReportPropertyChanging("NotID");
                    _NotID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("NotID");
                    OnNotIDChanged();
                }
            }
        }
        private global::System.Int32 _NotID;
        partial void OnNotIDChanging(global::System.Int32 value);
        partial void OnNotIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NotType
        {
            get
            {
                return _NotType;
            }
            set
            {
                OnNotTypeChanging(value);
                ReportPropertyChanging("NotType");
                _NotType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NotType");
                OnNotTypeChanged();
            }
        }
        private global::System.String _NotType;
        partial void OnNotTypeChanging(global::System.String value);
        partial void OnNotTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MeetingID
        {
            get
            {
                return _MeetingID;
            }
            set
            {
                OnMeetingIDChanging(value);
                ReportPropertyChanging("MeetingID");
                _MeetingID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MeetingID");
                OnMeetingIDChanged();
            }
        }
        private Nullable<global::System.Int32> _MeetingID;
        partial void OnMeetingIDChanging(Nullable<global::System.Int32> value);
        partial void OnMeetingIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AgendaID
        {
            get
            {
                return _AgendaID;
            }
            set
            {
                OnAgendaIDChanging(value);
                ReportPropertyChanging("AgendaID");
                _AgendaID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AgendaID");
                OnAgendaIDChanged();
            }
        }
        private Nullable<global::System.Int32> _AgendaID;
        partial void OnAgendaIDChanging(Nullable<global::System.Int32> value);
        partial void OnAgendaIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ProjectID
        {
            get
            {
                return _ProjectID;
            }
            set
            {
                OnProjectIDChanging(value);
                ReportPropertyChanging("ProjectID");
                _ProjectID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProjectID");
                OnProjectIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ProjectID;
        partial void OnProjectIDChanging(Nullable<global::System.Int32> value);
        partial void OnProjectIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime NotDate
        {
            get
            {
                return _NotDate;
            }
            set
            {
                OnNotDateChanging(value);
                ReportPropertyChanging("NotDate");
                _NotDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NotDate");
                OnNotDateChanged();
            }
        }
        private global::System.DateTime _NotDate;
        partial void OnNotDateChanging(global::System.DateTime value);
        partial void OnNotDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NotCreator
        {
            get
            {
                return _NotCreator;
            }
            set
            {
                OnNotCreatorChanging(value);
                ReportPropertyChanging("NotCreator");
                _NotCreator = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NotCreator");
                OnNotCreatorChanged();
            }
        }
        private global::System.Int32 _NotCreator;
        partial void OnNotCreatorChanging(global::System.Int32 value);
        partial void OnNotCreatorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DiscussionID
        {
            get
            {
                return _DiscussionID;
            }
            set
            {
                OnDiscussionIDChanging(value);
                ReportPropertyChanging("DiscussionID");
                _DiscussionID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DiscussionID");
                OnDiscussionIDChanged();
            }
        }
        private Nullable<global::System.Int32> _DiscussionID;
        partial void OnDiscussionIDChanging(Nullable<global::System.Int32> value);
        partial void OnDiscussionIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("boxModel", "FK_NotificationHeader_Agenda", "Agenda")]
        public Agendum Agendum
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Agendum>("boxModel.FK_NotificationHeader_Agenda", "Agenda").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Agendum>("boxModel.FK_NotificationHeader_Agenda", "Agenda").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Agendum> AgendumReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Agendum>("boxModel.FK_NotificationHeader_Agenda", "Agenda");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Agendum>("boxModel.FK_NotificationHeader_Agenda", "Agenda", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("boxModel", "FK_NotificationHeader_Meeting", "Meeting")]
        public Meeting Meeting
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Meeting>("boxModel.FK_NotificationHeader_Meeting", "Meeting").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Meeting>("boxModel.FK_NotificationHeader_Meeting", "Meeting").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Meeting> MeetingReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Meeting>("boxModel.FK_NotificationHeader_Meeting", "Meeting");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Meeting>("boxModel.FK_NotificationHeader_Meeting", "Meeting", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("boxModel", "FK_NotificationHeader_Project", "Project")]
        public Project Project
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("boxModel.FK_NotificationHeader_Project", "Project").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("boxModel.FK_NotificationHeader_Project", "Project").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Project> ProjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("boxModel.FK_NotificationHeader_Project", "Project");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Project>("boxModel.FK_NotificationHeader_Project", "Project", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("boxModel", "FK_NotificationHeader_UserProfile", "UserProfile")]
        public UserProfile UserProfile
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserProfile>("boxModel.FK_NotificationHeader_UserProfile", "UserProfile").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserProfile>("boxModel.FK_NotificationHeader_UserProfile", "UserProfile").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserProfile> UserProfileReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserProfile>("boxModel.FK_NotificationHeader_UserProfile", "UserProfile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserProfile>("boxModel.FK_NotificationHeader_UserProfile", "UserProfile", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("boxModel", "FK_NotInfo_NotificationHeader", "NotInfo")]
        public EntityCollection<NotInfo> NotInfoes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<NotInfo>("boxModel.FK_NotInfo_NotificationHeader", "NotInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<NotInfo>("boxModel.FK_NotInfo_NotificationHeader", "NotInfo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("boxModel", "FK_NotificationHeader_Discussion", "Discussion")]
        public Discussion Discussion
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Discussion>("boxModel.FK_NotificationHeader_Discussion", "Discussion").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Discussion>("boxModel.FK_NotificationHeader_Discussion", "Discussion").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Discussion> DiscussionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Discussion>("boxModel.FK_NotificationHeader_Discussion", "Discussion");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Discussion>("boxModel.FK_NotificationHeader_Discussion", "Discussion", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="boxModel", Name="NotInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class NotInfo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new NotInfo object.
        /// </summary>
        /// <param name="notInfoID">Initial value of the NotInfoID property.</param>
        /// <param name="notHeaderID">Initial value of the NotHeaderID property.</param>
        /// <param name="userID">Initial value of the UserID property.</param>
        /// <param name="ack">Initial value of the Ack property.</param>
        /// <param name="seen">Initial value of the Seen property.</param>
        public static NotInfo CreateNotInfo(global::System.Int32 notInfoID, global::System.Int32 notHeaderID, global::System.Int32 userID, global::System.Boolean ack, global::System.Boolean seen)
        {
            NotInfo notInfo = new NotInfo();
            notInfo.NotInfoID = notInfoID;
            notInfo.NotHeaderID = notHeaderID;
            notInfo.UserID = userID;
            notInfo.Ack = ack;
            notInfo.Seen = seen;
            return notInfo;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NotInfoID
        {
            get
            {
                return _NotInfoID;
            }
            set
            {
                if (_NotInfoID != value)
                {
                    OnNotInfoIDChanging(value);
                    ReportPropertyChanging("NotInfoID");
                    _NotInfoID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("NotInfoID");
                    OnNotInfoIDChanged();
                }
            }
        }
        private global::System.Int32 _NotInfoID;
        partial void OnNotInfoIDChanging(global::System.Int32 value);
        partial void OnNotInfoIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NotHeaderID
        {
            get
            {
                return _NotHeaderID;
            }
            set
            {
                OnNotHeaderIDChanging(value);
                ReportPropertyChanging("NotHeaderID");
                _NotHeaderID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NotHeaderID");
                OnNotHeaderIDChanged();
            }
        }
        private global::System.Int32 _NotHeaderID;
        partial void OnNotHeaderIDChanging(global::System.Int32 value);
        partial void OnNotHeaderIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.Int32 _UserID;
        partial void OnUserIDChanging(global::System.Int32 value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Ack
        {
            get
            {
                return _Ack;
            }
            set
            {
                OnAckChanging(value);
                ReportPropertyChanging("Ack");
                _Ack = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Ack");
                OnAckChanged();
            }
        }
        private global::System.Boolean _Ack;
        partial void OnAckChanging(global::System.Boolean value);
        partial void OnAckChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Seen
        {
            get
            {
                return _Seen;
            }
            set
            {
                OnSeenChanging(value);
                ReportPropertyChanging("Seen");
                _Seen = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Seen");
                OnSeenChanged();
            }
        }
        private global::System.Boolean _Seen;
        partial void OnSeenChanging(global::System.Boolean value);
        partial void OnSeenChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateSeen
        {
            get
            {
                return _DateSeen;
            }
            set
            {
                OnDateSeenChanging(value);
                ReportPropertyChanging("DateSeen");
                _DateSeen = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateSeen");
                OnDateSeenChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateSeen;
        partial void OnDateSeenChanging(Nullable<global::System.DateTime> value);
        partial void OnDateSeenChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("boxModel", "FK_NotInfo_NotificationHeader", "NotificationHeader")]
        public NotificationHeader NotificationHeader
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NotificationHeader>("boxModel.FK_NotInfo_NotificationHeader", "NotificationHeader").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NotificationHeader>("boxModel.FK_NotInfo_NotificationHeader", "NotificationHeader").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<NotificationHeader> NotificationHeaderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NotificationHeader>("boxModel.FK_NotInfo_NotificationHeader", "NotificationHeader");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<NotificationHeader>("boxModel.FK_NotInfo_NotificationHeader", "NotificationHeader", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("boxModel", "FK_NotInfo_UserProfile", "UserProfile")]
        public UserProfile UserProfile
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserProfile>("boxModel.FK_NotInfo_UserProfile", "UserProfile").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserProfile>("boxModel.FK_NotInfo_UserProfile", "UserProfile").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserProfile> UserProfileReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserProfile>("boxModel.FK_NotInfo_UserProfile", "UserProfile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserProfile>("boxModel.FK_NotInfo_UserProfile", "UserProfile", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="boxModel", Name="Project")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Project : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Project object.
        /// </summary>
        /// <param name="projectID">Initial value of the ProjectID property.</param>
        /// <param name="projectTitle">Initial value of the ProjectTitle property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        /// <param name="rootPath">Initial value of the RootPath property.</param>
        public static Project CreateProject(global::System.Int32 projectID, global::System.String projectTitle, global::System.DateTime dateCreated, global::System.String rootPath)
        {
            Project project = new Project();
            project.ProjectID = projectID;
            project.ProjectTitle = projectTitle;
            project.DateCreated = dateCreated;
            project.RootPath = rootPath;
            return project;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectID
        {
            get
            {
                return _ProjectID;
            }
            set
            {
                if (_ProjectID != value)
                {
                    OnProjectIDChanging(value);
                    ReportPropertyChanging("ProjectID");
                    _ProjectID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ProjectID");
                    OnProjectIDChanged();
                }
            }
        }
        private global::System.Int32 _ProjectID;
        partial void OnProjectIDChanging(global::System.Int32 value);
        partial void OnProjectIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProjectTitle
        {
            get
            {
                return _ProjectTitle;
            }
            set
            {
                OnProjectTitleChanging(value);
                ReportPropertyChanging("ProjectTitle");
                _ProjectTitle = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ProjectTitle");
                OnProjectTitleChanged();
            }
        }
        private global::System.String _ProjectTitle;
        partial void OnProjectTitleChanging(global::System.String value);
        partial void OnProjectTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RootPath
        {
            get
            {
                return _RootPath;
            }
            set
            {
                OnRootPathChanging(value);
                ReportPropertyChanging("RootPath");
                _RootPath = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RootPath");
                OnRootPathChanged();
            }
        }
        private global::System.String _RootPath;
        partial void OnRootPathChanging(global::System.String value);
        partial void OnRootPathChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("boxModel", "FK_NotificationHeader_Project", "NotificationHeader")]
        public EntityCollection<NotificationHeader> NotificationHeaders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<NotificationHeader>("boxModel.FK_NotificationHeader_Project", "NotificationHeader");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<NotificationHeader>("boxModel.FK_NotificationHeader_Project", "NotificationHeader", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("boxModel", "FK_ProjectFile_Project", "ProjectFile")]
        public EntityCollection<ProjectFile> ProjectFiles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectFile>("boxModel.FK_ProjectFile_Project", "ProjectFile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectFile>("boxModel.FK_ProjectFile_Project", "ProjectFile", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("boxModel", "FK_ProjectUser_Project", "ProjectUser")]
        public EntityCollection<ProjectUser> ProjectUsers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectUser>("boxModel.FK_ProjectUser_Project", "ProjectUser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectUser>("boxModel.FK_ProjectUser_Project", "ProjectUser", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("boxModel", "FK_Discussion_Project", "Discussion")]
        public EntityCollection<Discussion> Discussions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Discussion>("boxModel.FK_Discussion_Project", "Discussion");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Discussion>("boxModel.FK_Discussion_Project", "Discussion", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="boxModel", Name="ProjectFile")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProjectFile : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProjectFile object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="projectID">Initial value of the ProjectID property.</param>
        /// <param name="dateAdded">Initial value of the DateAdded property.</param>
        /// <param name="upFolder">Initial value of the UpFolder property.</param>
        /// <param name="directory">Initial value of the Directory property.</param>
        /// <param name="fullName">Initial value of the FullName property.</param>
        /// <param name="creator">Initial value of the Creator property.</param>
        /// <param name="fileName">Initial value of the FileName property.</param>
        /// <param name="privacy">Initial value of the Privacy property.</param>
        public static ProjectFile CreateProjectFile(global::System.Int32 id, global::System.Int32 projectID, global::System.DateTime dateAdded, global::System.String upFolder, global::System.String directory, global::System.String fullName, global::System.Int32 creator, global::System.String fileName, global::System.String privacy)
        {
            ProjectFile projectFile = new ProjectFile();
            projectFile.ID = id;
            projectFile.ProjectID = projectID;
            projectFile.DateAdded = dateAdded;
            projectFile.UpFolder = upFolder;
            projectFile.Directory = directory;
            projectFile.FullName = fullName;
            projectFile.Creator = creator;
            projectFile.FileName = fileName;
            projectFile.Privacy = privacy;
            return projectFile;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectID
        {
            get
            {
                return _ProjectID;
            }
            set
            {
                OnProjectIDChanging(value);
                ReportPropertyChanging("ProjectID");
                _ProjectID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProjectID");
                OnProjectIDChanged();
            }
        }
        private global::System.Int32 _ProjectID;
        partial void OnProjectIDChanging(global::System.Int32 value);
        partial void OnProjectIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateAdded
        {
            get
            {
                return _DateAdded;
            }
            set
            {
                OnDateAddedChanging(value);
                ReportPropertyChanging("DateAdded");
                _DateAdded = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateAdded");
                OnDateAddedChanged();
            }
        }
        private global::System.DateTime _DateAdded;
        partial void OnDateAddedChanging(global::System.DateTime value);
        partial void OnDateAddedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UpFolder
        {
            get
            {
                return _UpFolder;
            }
            set
            {
                OnUpFolderChanging(value);
                ReportPropertyChanging("UpFolder");
                _UpFolder = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UpFolder");
                OnUpFolderChanged();
            }
        }
        private global::System.String _UpFolder;
        partial void OnUpFolderChanging(global::System.String value);
        partial void OnUpFolderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Directory
        {
            get
            {
                return _Directory;
            }
            set
            {
                OnDirectoryChanging(value);
                ReportPropertyChanging("Directory");
                _Directory = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Directory");
                OnDirectoryChanged();
            }
        }
        private global::System.String _Directory;
        partial void OnDirectoryChanging(global::System.String value);
        partial void OnDirectoryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FullName
        {
            get
            {
                return _FullName;
            }
            set
            {
                OnFullNameChanging(value);
                ReportPropertyChanging("FullName");
                _FullName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FullName");
                OnFullNameChanged();
            }
        }
        private global::System.String _FullName;
        partial void OnFullNameChanging(global::System.String value);
        partial void OnFullNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                OnCreatorChanging(value);
                ReportPropertyChanging("Creator");
                _Creator = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Creator");
                OnCreatorChanged();
            }
        }
        private global::System.Int32 _Creator;
        partial void OnCreatorChanging(global::System.Int32 value);
        partial void OnCreatorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FileName
        {
            get
            {
                return _FileName;
            }
            set
            {
                OnFileNameChanging(value);
                ReportPropertyChanging("FileName");
                _FileName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FileName");
                OnFileNameChanged();
            }
        }
        private global::System.String _FileName;
        partial void OnFileNameChanging(global::System.String value);
        partial void OnFileNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Privacy
        {
            get
            {
                return _Privacy;
            }
            set
            {
                OnPrivacyChanging(value);
                ReportPropertyChanging("Privacy");
                _Privacy = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Privacy");
                OnPrivacyChanged();
            }
        }
        private global::System.String _Privacy;
        partial void OnPrivacyChanging(global::System.String value);
        partial void OnPrivacyChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("boxModel", "FK_ProjectFile_Project", "Project")]
        public Project Project
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("boxModel.FK_ProjectFile_Project", "Project").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("boxModel.FK_ProjectFile_Project", "Project").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Project> ProjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("boxModel.FK_ProjectFile_Project", "Project");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Project>("boxModel.FK_ProjectFile_Project", "Project", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("boxModel", "FK_ProjectFile_ProjectUser", "ProjectUser")]
        public ProjectUser ProjectUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectUser>("boxModel.FK_ProjectFile_ProjectUser", "ProjectUser").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectUser>("boxModel.FK_ProjectFile_ProjectUser", "ProjectUser").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProjectUser> ProjectUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectUser>("boxModel.FK_ProjectFile_ProjectUser", "ProjectUser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProjectUser>("boxModel.FK_ProjectFile_ProjectUser", "ProjectUser", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("boxModel", "FK_ProjectPrivacy_ProjectFile", "ProjectPrivacy")]
        public EntityCollection<ProjectPrivacy> ProjectPrivacies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectPrivacy>("boxModel.FK_ProjectPrivacy_ProjectFile", "ProjectPrivacy");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectPrivacy>("boxModel.FK_ProjectPrivacy_ProjectFile", "ProjectPrivacy", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("boxModel", "FK_Discussion_ProjectFile", "Discussion")]
        public EntityCollection<Discussion> Discussions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Discussion>("boxModel.FK_Discussion_ProjectFile", "Discussion");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Discussion>("boxModel.FK_Discussion_ProjectFile", "Discussion", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("boxModel", "FK_TaskAssign_ProjectFile", "TaskAssign")]
        public EntityCollection<TaskAssign> TaskAssigns
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TaskAssign>("boxModel.FK_TaskAssign_ProjectFile", "TaskAssign");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TaskAssign>("boxModel.FK_TaskAssign_ProjectFile", "TaskAssign", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="boxModel", Name="ProjectPrivacy")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProjectPrivacy : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProjectPrivacy object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="projectFileID">Initial value of the ProjectFileID property.</param>
        /// <param name="projectUserID">Initial value of the ProjectUserID property.</param>
        /// <param name="canSee">Initial value of the CanSee property.</param>
        public static ProjectPrivacy CreateProjectPrivacy(global::System.Int32 id, global::System.Int32 projectFileID, global::System.Int32 projectUserID, global::System.Boolean canSee)
        {
            ProjectPrivacy projectPrivacy = new ProjectPrivacy();
            projectPrivacy.ID = id;
            projectPrivacy.ProjectFileID = projectFileID;
            projectPrivacy.ProjectUserID = projectUserID;
            projectPrivacy.CanSee = canSee;
            return projectPrivacy;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectFileID
        {
            get
            {
                return _ProjectFileID;
            }
            set
            {
                OnProjectFileIDChanging(value);
                ReportPropertyChanging("ProjectFileID");
                _ProjectFileID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProjectFileID");
                OnProjectFileIDChanged();
            }
        }
        private global::System.Int32 _ProjectFileID;
        partial void OnProjectFileIDChanging(global::System.Int32 value);
        partial void OnProjectFileIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectUserID
        {
            get
            {
                return _ProjectUserID;
            }
            set
            {
                OnProjectUserIDChanging(value);
                ReportPropertyChanging("ProjectUserID");
                _ProjectUserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProjectUserID");
                OnProjectUserIDChanged();
            }
        }
        private global::System.Int32 _ProjectUserID;
        partial void OnProjectUserIDChanging(global::System.Int32 value);
        partial void OnProjectUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean CanSee
        {
            get
            {
                return _CanSee;
            }
            set
            {
                OnCanSeeChanging(value);
                ReportPropertyChanging("CanSee");
                _CanSee = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CanSee");
                OnCanSeeChanged();
            }
        }
        private global::System.Boolean _CanSee;
        partial void OnCanSeeChanging(global::System.Boolean value);
        partial void OnCanSeeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("boxModel", "FK_ProjectPrivacy_ProjectFile", "ProjectFile")]
        public ProjectFile ProjectFile
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectFile>("boxModel.FK_ProjectPrivacy_ProjectFile", "ProjectFile").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectFile>("boxModel.FK_ProjectPrivacy_ProjectFile", "ProjectFile").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProjectFile> ProjectFileReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectFile>("boxModel.FK_ProjectPrivacy_ProjectFile", "ProjectFile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProjectFile>("boxModel.FK_ProjectPrivacy_ProjectFile", "ProjectFile", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("boxModel", "FK_ProjectPrivacy_ProjectUser", "ProjectUser")]
        public ProjectUser ProjectUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectUser>("boxModel.FK_ProjectPrivacy_ProjectUser", "ProjectUser").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectUser>("boxModel.FK_ProjectPrivacy_ProjectUser", "ProjectUser").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProjectUser> ProjectUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectUser>("boxModel.FK_ProjectPrivacy_ProjectUser", "ProjectUser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProjectUser>("boxModel.FK_ProjectPrivacy_ProjectUser", "ProjectUser", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="boxModel", Name="ProjectUser")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProjectUser : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProjectUser object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="projectID">Initial value of the ProjectID property.</param>
        /// <param name="userID">Initial value of the UserID property.</param>
        /// <param name="addedDate">Initial value of the AddedDate property.</param>
        /// <param name="role">Initial value of the Role property.</param>
        public static ProjectUser CreateProjectUser(global::System.Int32 id, global::System.Int32 projectID, global::System.Int32 userID, global::System.DateTime addedDate, global::System.String role)
        {
            ProjectUser projectUser = new ProjectUser();
            projectUser.ID = id;
            projectUser.ProjectID = projectID;
            projectUser.UserID = userID;
            projectUser.AddedDate = addedDate;
            projectUser.Role = role;
            return projectUser;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectID
        {
            get
            {
                return _ProjectID;
            }
            set
            {
                OnProjectIDChanging(value);
                ReportPropertyChanging("ProjectID");
                _ProjectID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProjectID");
                OnProjectIDChanged();
            }
        }
        private global::System.Int32 _ProjectID;
        partial void OnProjectIDChanging(global::System.Int32 value);
        partial void OnProjectIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.Int32 _UserID;
        partial void OnUserIDChanging(global::System.Int32 value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime AddedDate
        {
            get
            {
                return _AddedDate;
            }
            set
            {
                OnAddedDateChanging(value);
                ReportPropertyChanging("AddedDate");
                _AddedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AddedDate");
                OnAddedDateChanged();
            }
        }
        private global::System.DateTime _AddedDate;
        partial void OnAddedDateChanging(global::System.DateTime value);
        partial void OnAddedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Role
        {
            get
            {
                return _Role;
            }
            set
            {
                OnRoleChanging(value);
                ReportPropertyChanging("Role");
                _Role = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Role");
                OnRoleChanged();
            }
        }
        private global::System.String _Role;
        partial void OnRoleChanging(global::System.String value);
        partial void OnRoleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                OnCreatorChanging(value);
                ReportPropertyChanging("Creator");
                _Creator = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Creator");
                OnCreatorChanged();
            }
        }
        private Nullable<global::System.Boolean> _Creator;
        partial void OnCreatorChanging(Nullable<global::System.Boolean> value);
        partial void OnCreatorChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("boxModel", "FK_ProjectUser_Project", "Project")]
        public Project Project
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("boxModel.FK_ProjectUser_Project", "Project").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("boxModel.FK_ProjectUser_Project", "Project").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Project> ProjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("boxModel.FK_ProjectUser_Project", "Project");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Project>("boxModel.FK_ProjectUser_Project", "Project", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("boxModel", "FK_ProjectFile_ProjectUser", "ProjectFile")]
        public EntityCollection<ProjectFile> ProjectFiles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectFile>("boxModel.FK_ProjectFile_ProjectUser", "ProjectFile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectFile>("boxModel.FK_ProjectFile_ProjectUser", "ProjectFile", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("boxModel", "FK_ProjectPrivacy_ProjectUser", "ProjectPrivacy")]
        public EntityCollection<ProjectPrivacy> ProjectPrivacies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectPrivacy>("boxModel.FK_ProjectPrivacy_ProjectUser", "ProjectPrivacy");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectPrivacy>("boxModel.FK_ProjectPrivacy_ProjectUser", "ProjectPrivacy", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("boxModel", "FK_ProjectUser_UserProfile", "UserProfile")]
        public UserProfile UserProfile
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserProfile>("boxModel.FK_ProjectUser_UserProfile", "UserProfile").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserProfile>("boxModel.FK_ProjectUser_UserProfile", "UserProfile").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserProfile> UserProfileReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserProfile>("boxModel.FK_ProjectUser_UserProfile", "UserProfile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserProfile>("boxModel.FK_ProjectUser_UserProfile", "UserProfile", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="boxModel", Name="Reply")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Reply : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Reply object.
        /// </summary>
        /// <param name="replyID">Initial value of the ReplyID property.</param>
        /// <param name="discussionID">Initial value of the DiscussionID property.</param>
        /// <param name="userID">Initial value of the UserID property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="text">Initial value of the Text property.</param>
        public static Reply CreateReply(global::System.Int32 replyID, global::System.Int32 discussionID, global::System.Int32 userID, global::System.DateTime date, global::System.String title, global::System.String text)
        {
            Reply reply = new Reply();
            reply.ReplyID = replyID;
            reply.DiscussionID = discussionID;
            reply.UserID = userID;
            reply.Date = date;
            reply.Title = title;
            reply.Text = text;
            return reply;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ReplyID
        {
            get
            {
                return _ReplyID;
            }
            set
            {
                if (_ReplyID != value)
                {
                    OnReplyIDChanging(value);
                    ReportPropertyChanging("ReplyID");
                    _ReplyID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ReplyID");
                    OnReplyIDChanged();
                }
            }
        }
        private global::System.Int32 _ReplyID;
        partial void OnReplyIDChanging(global::System.Int32 value);
        partial void OnReplyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DiscussionID
        {
            get
            {
                return _DiscussionID;
            }
            set
            {
                OnDiscussionIDChanging(value);
                ReportPropertyChanging("DiscussionID");
                _DiscussionID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DiscussionID");
                OnDiscussionIDChanged();
            }
        }
        private global::System.Int32 _DiscussionID;
        partial void OnDiscussionIDChanging(global::System.Int32 value);
        partial void OnDiscussionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.Int32 _UserID;
        partial void OnUserIDChanging(global::System.Int32 value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private global::System.String _Text;
        partial void OnTextChanging(global::System.String value);
        partial void OnTextChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("boxModel", "FK_Reply_Discussion", "Discussion")]
        public Discussion Discussion
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Discussion>("boxModel.FK_Reply_Discussion", "Discussion").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Discussion>("boxModel.FK_Reply_Discussion", "Discussion").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Discussion> DiscussionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Discussion>("boxModel.FK_Reply_Discussion", "Discussion");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Discussion>("boxModel.FK_Reply_Discussion", "Discussion", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("boxModel", "FK_Reply_UserProfile", "UserProfile")]
        public UserProfile UserProfile
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserProfile>("boxModel.FK_Reply_UserProfile", "UserProfile").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserProfile>("boxModel.FK_Reply_UserProfile", "UserProfile").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserProfile> UserProfileReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserProfile>("boxModel.FK_Reply_UserProfile", "UserProfile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserProfile>("boxModel.FK_Reply_UserProfile", "UserProfile", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="boxModel", Name="Resource")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Resource : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Resource object.
        /// </summary>
        /// <param name="rID">Initial value of the RID property.</param>
        /// <param name="rName">Initial value of the RName property.</param>
        /// <param name="rDesc">Initial value of the RDesc property.</param>
        public static Resource CreateResource(global::System.Int32 rID, global::System.String rName, global::System.String rDesc)
        {
            Resource resource = new Resource();
            resource.RID = rID;
            resource.RName = rName;
            resource.RDesc = rDesc;
            return resource;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RID
        {
            get
            {
                return _RID;
            }
            set
            {
                if (_RID != value)
                {
                    OnRIDChanging(value);
                    ReportPropertyChanging("RID");
                    _RID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RID");
                    OnRIDChanged();
                }
            }
        }
        private global::System.Int32 _RID;
        partial void OnRIDChanging(global::System.Int32 value);
        partial void OnRIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RName
        {
            get
            {
                return _RName;
            }
            set
            {
                OnRNameChanging(value);
                ReportPropertyChanging("RName");
                _RName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RName");
                OnRNameChanged();
            }
        }
        private global::System.String _RName;
        partial void OnRNameChanging(global::System.String value);
        partial void OnRNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RDesc
        {
            get
            {
                return _RDesc;
            }
            set
            {
                OnRDescChanging(value);
                ReportPropertyChanging("RDesc");
                _RDesc = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RDesc");
                OnRDescChanged();
            }
        }
        private global::System.String _RDesc;
        partial void OnRDescChanging(global::System.String value);
        partial void OnRDescChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("boxModel", "FK_MeetingResource_Resource", "MeetingResource")]
        public EntityCollection<MeetingResource> MeetingResources
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MeetingResource>("boxModel.FK_MeetingResource_Resource", "MeetingResource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MeetingResource>("boxModel.FK_MeetingResource_Resource", "MeetingResource", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="boxModel", Name="sysdiagram")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class sysdiagram : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new sysdiagram object.
        /// </summary>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="principal_id">Initial value of the principal_id property.</param>
        /// <param name="diagram_id">Initial value of the diagram_id property.</param>
        public static sysdiagram Createsysdiagram(global::System.String name, global::System.Int32 principal_id, global::System.Int32 diagram_id)
        {
            sysdiagram sysdiagram = new sysdiagram();
            sysdiagram.name = name;
            sysdiagram.principal_id = principal_id;
            sysdiagram.diagram_id = diagram_id;
            return sysdiagram;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 principal_id
        {
            get
            {
                return _principal_id;
            }
            set
            {
                Onprincipal_idChanging(value);
                ReportPropertyChanging("principal_id");
                _principal_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("principal_id");
                Onprincipal_idChanged();
            }
        }
        private global::System.Int32 _principal_id;
        partial void Onprincipal_idChanging(global::System.Int32 value);
        partial void Onprincipal_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 diagram_id
        {
            get
            {
                return _diagram_id;
            }
            set
            {
                if (_diagram_id != value)
                {
                    Ondiagram_idChanging(value);
                    ReportPropertyChanging("diagram_id");
                    _diagram_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("diagram_id");
                    Ondiagram_idChanged();
                }
            }
        }
        private global::System.Int32 _diagram_id;
        partial void Ondiagram_idChanging(global::System.Int32 value);
        partial void Ondiagram_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> version
        {
            get
            {
                return _version;
            }
            set
            {
                OnversionChanging(value);
                ReportPropertyChanging("version");
                _version = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("version");
                OnversionChanged();
            }
        }
        private Nullable<global::System.Int32> _version;
        partial void OnversionChanging(Nullable<global::System.Int32> value);
        partial void OnversionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] definition
        {
            get
            {
                return StructuralObject.GetValidValue(_definition);
            }
            set
            {
                OndefinitionChanging(value);
                ReportPropertyChanging("definition");
                _definition = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("definition");
                OndefinitionChanged();
            }
        }
        private global::System.Byte[] _definition;
        partial void OndefinitionChanging(global::System.Byte[] value);
        partial void OndefinitionChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="boxModel", Name="TaskAssign")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TaskAssign : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TaskAssign object.
        /// </summary>
        /// <param name="taskID">Initial value of the TaskID property.</param>
        /// <param name="taskTitle">Initial value of the TaskTitle property.</param>
        /// <param name="dueDate">Initial value of the DueDate property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        /// <param name="taskDesc">Initial value of the TaskDesc property.</param>
        public static TaskAssign CreateTaskAssign(global::System.Int32 taskID, global::System.String taskTitle, global::System.DateTime dueDate, global::System.DateTime dateCreated, global::System.String taskDesc)
        {
            TaskAssign taskAssign = new TaskAssign();
            taskAssign.TaskID = taskID;
            taskAssign.TaskTitle = taskTitle;
            taskAssign.DueDate = dueDate;
            taskAssign.DateCreated = dateCreated;
            taskAssign.TaskDesc = taskDesc;
            return taskAssign;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TaskID
        {
            get
            {
                return _TaskID;
            }
            set
            {
                if (_TaskID != value)
                {
                    OnTaskIDChanging(value);
                    ReportPropertyChanging("TaskID");
                    _TaskID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TaskID");
                    OnTaskIDChanged();
                }
            }
        }
        private global::System.Int32 _TaskID;
        partial void OnTaskIDChanging(global::System.Int32 value);
        partial void OnTaskIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TaskTitle
        {
            get
            {
                return _TaskTitle;
            }
            set
            {
                OnTaskTitleChanging(value);
                ReportPropertyChanging("TaskTitle");
                _TaskTitle = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TaskTitle");
                OnTaskTitleChanged();
            }
        }
        private global::System.String _TaskTitle;
        partial void OnTaskTitleChanging(global::System.String value);
        partial void OnTaskTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DueDate
        {
            get
            {
                return _DueDate;
            }
            set
            {
                OnDueDateChanging(value);
                ReportPropertyChanging("DueDate");
                _DueDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DueDate");
                OnDueDateChanged();
            }
        }
        private global::System.DateTime _DueDate;
        partial void OnDueDateChanging(global::System.DateTime value);
        partial void OnDueDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TaskDesc
        {
            get
            {
                return _TaskDesc;
            }
            set
            {
                OnTaskDescChanging(value);
                ReportPropertyChanging("TaskDesc");
                _TaskDesc = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TaskDesc");
                OnTaskDescChanged();
            }
        }
        private global::System.String _TaskDesc;
        partial void OnTaskDescChanging(global::System.String value);
        partial void OnTaskDescChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MeetingID
        {
            get
            {
                return _MeetingID;
            }
            set
            {
                OnMeetingIDChanging(value);
                ReportPropertyChanging("MeetingID");
                _MeetingID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MeetingID");
                OnMeetingIDChanged();
            }
        }
        private Nullable<global::System.Int32> _MeetingID;
        partial void OnMeetingIDChanging(Nullable<global::System.Int32> value);
        partial void OnMeetingIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AgendaID
        {
            get
            {
                return _AgendaID;
            }
            set
            {
                OnAgendaIDChanging(value);
                ReportPropertyChanging("AgendaID");
                _AgendaID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AgendaID");
                OnAgendaIDChanged();
            }
        }
        private Nullable<global::System.Int32> _AgendaID;
        partial void OnAgendaIDChanging(Nullable<global::System.Int32> value);
        partial void OnAgendaIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                OnCreatorChanging(value);
                ReportPropertyChanging("Creator");
                _Creator = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Creator");
                OnCreatorChanged();
            }
        }
        private Nullable<global::System.Int32> _Creator;
        partial void OnCreatorChanging(Nullable<global::System.Int32> value);
        partial void OnCreatorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ProjecFileID
        {
            get
            {
                return _ProjecFileID;
            }
            set
            {
                OnProjecFileIDChanging(value);
                ReportPropertyChanging("ProjecFileID");
                _ProjecFileID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProjecFileID");
                OnProjecFileIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ProjecFileID;
        partial void OnProjecFileIDChanging(Nullable<global::System.Int32> value);
        partial void OnProjecFileIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("boxModel", "FK_TaskAssign_Agenda", "Agendum")]
        public Agendum Agendum
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Agendum>("boxModel.FK_TaskAssign_Agenda", "Agendum").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Agendum>("boxModel.FK_TaskAssign_Agenda", "Agendum").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Agendum> AgendumReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Agendum>("boxModel.FK_TaskAssign_Agenda", "Agendum");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Agendum>("boxModel.FK_TaskAssign_Agenda", "Agendum", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("boxModel", "FK_TaskAssign_Meeting", "Meeting")]
        public Meeting Meeting
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Meeting>("boxModel.FK_TaskAssign_Meeting", "Meeting").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Meeting>("boxModel.FK_TaskAssign_Meeting", "Meeting").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Meeting> MeetingReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Meeting>("boxModel.FK_TaskAssign_Meeting", "Meeting");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Meeting>("boxModel.FK_TaskAssign_Meeting", "Meeting", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("boxModel", "FK_TaskAssign_ProjectFile", "ProjectFile")]
        public ProjectFile ProjectFile
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectFile>("boxModel.FK_TaskAssign_ProjectFile", "ProjectFile").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectFile>("boxModel.FK_TaskAssign_ProjectFile", "ProjectFile").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProjectFile> ProjectFileReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectFile>("boxModel.FK_TaskAssign_ProjectFile", "ProjectFile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProjectFile>("boxModel.FK_TaskAssign_ProjectFile", "ProjectFile", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("boxModel", "FK_TaskAssign_UserProfile", "UserProfile")]
        public UserProfile UserProfile
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserProfile>("boxModel.FK_TaskAssign_UserProfile", "UserProfile").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserProfile>("boxModel.FK_TaskAssign_UserProfile", "UserProfile").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserProfile> UserProfileReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserProfile>("boxModel.FK_TaskAssign_UserProfile", "UserProfile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserProfile>("boxModel.FK_TaskAssign_UserProfile", "UserProfile", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("boxModel", "FK_TaskUser_TaskAssign", "TaskUser")]
        public EntityCollection<TaskUser> TaskUsers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TaskUser>("boxModel.FK_TaskUser_TaskAssign", "TaskUser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TaskUser>("boxModel.FK_TaskUser_TaskAssign", "TaskUser", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="boxModel", Name="TaskUser")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TaskUser : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TaskUser object.
        /// </summary>
        /// <param name="taskID">Initial value of the TaskID property.</param>
        /// <param name="userID">Initial value of the UserID property.</param>
        public static TaskUser CreateTaskUser(global::System.Int32 taskID, global::System.Int32 userID)
        {
            TaskUser taskUser = new TaskUser();
            taskUser.TaskID = taskID;
            taskUser.UserID = userID;
            return taskUser;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TaskID
        {
            get
            {
                return _TaskID;
            }
            set
            {
                if (_TaskID != value)
                {
                    OnTaskIDChanging(value);
                    ReportPropertyChanging("TaskID");
                    _TaskID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TaskID");
                    OnTaskIDChanged();
                }
            }
        }
        private global::System.Int32 _TaskID;
        partial void OnTaskIDChanging(global::System.Int32 value);
        partial void OnTaskIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                if (_UserID != value)
                {
                    OnUserIDChanging(value);
                    ReportPropertyChanging("UserID");
                    _UserID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserID");
                    OnUserIDChanged();
                }
            }
        }
        private global::System.Int32 _UserID;
        partial void OnUserIDChanging(global::System.Int32 value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TDesc
        {
            get
            {
                return _TDesc;
            }
            set
            {
                OnTDescChanging(value);
                ReportPropertyChanging("TDesc");
                _TDesc = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TDesc");
                OnTDescChanged();
            }
        }
        private global::System.String _TDesc;
        partial void OnTDescChanging(global::System.String value);
        partial void OnTDescChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> AssignedDate
        {
            get
            {
                return _AssignedDate;
            }
            set
            {
                OnAssignedDateChanging(value);
                ReportPropertyChanging("AssignedDate");
                _AssignedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AssignedDate");
                OnAssignedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _AssignedDate;
        partial void OnAssignedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnAssignedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ResponseDate
        {
            get
            {
                return _ResponseDate;
            }
            set
            {
                OnResponseDateChanging(value);
                ReportPropertyChanging("ResponseDate");
                _ResponseDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ResponseDate");
                OnResponseDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ResponseDate;
        partial void OnResponseDateChanging(Nullable<global::System.DateTime> value);
        partial void OnResponseDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Response
        {
            get
            {
                return _Response;
            }
            set
            {
                OnResponseChanging(value);
                ReportPropertyChanging("Response");
                _Response = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Response");
                OnResponseChanged();
            }
        }
        private global::System.String _Response;
        partial void OnResponseChanging(global::System.String value);
        partial void OnResponseChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("boxModel", "FK_TaskUser_UserProfile", "UserProfile")]
        public UserProfile UserProfile
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserProfile>("boxModel.FK_TaskUser_UserProfile", "UserProfile").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserProfile>("boxModel.FK_TaskUser_UserProfile", "UserProfile").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserProfile> UserProfileReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserProfile>("boxModel.FK_TaskUser_UserProfile", "UserProfile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserProfile>("boxModel.FK_TaskUser_UserProfile", "UserProfile", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("boxModel", "FK_TaskUser_TaskAssign", "TaskAssign")]
        public TaskAssign TaskAssign
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TaskAssign>("boxModel.FK_TaskUser_TaskAssign", "TaskAssign").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TaskAssign>("boxModel.FK_TaskUser_TaskAssign", "TaskAssign").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TaskAssign> TaskAssignReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TaskAssign>("boxModel.FK_TaskUser_TaskAssign", "TaskAssign");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TaskAssign>("boxModel.FK_TaskUser_TaskAssign", "TaskAssign", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="boxModel", Name="UserProfile")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserProfile : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserProfile object.
        /// </summary>
        /// <param name="userID">Initial value of the UserID property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="email">Initial value of the Email property.</param>
        /// <param name="position">Initial value of the Position property.</param>
        public static UserProfile CreateUserProfile(global::System.Int32 userID, global::System.String firstName, global::System.String lastName, global::System.String userName, global::System.String email, global::System.String position)
        {
            UserProfile userProfile = new UserProfile();
            userProfile.UserID = userID;
            userProfile.FirstName = firstName;
            userProfile.LastName = lastName;
            userProfile.UserName = userName;
            userProfile.Email = email;
            userProfile.Position = position;
            return userProfile;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                if (_UserID != value)
                {
                    OnUserIDChanging(value);
                    ReportPropertyChanging("UserID");
                    _UserID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserID");
                    OnUserIDChanged();
                }
            }
        }
        private global::System.Int32 _UserID;
        partial void OnUserIDChanging(global::System.Int32 value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Position
        {
            get
            {
                return _Position;
            }
            set
            {
                OnPositionChanging(value);
                ReportPropertyChanging("Position");
                _Position = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Position");
                OnPositionChanged();
            }
        }
        private global::System.String _Position;
        partial void OnPositionChanging(global::System.String value);
        partial void OnPositionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("boxModel", "FK_Comment_UserProfile", "Comment")]
        public EntityCollection<Comment> Comments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Comment>("boxModel.FK_Comment_UserProfile", "Comment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Comment>("boxModel.FK_Comment_UserProfile", "Comment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("boxModel", "FK_Discussion_UserProfile", "Discussion")]
        public EntityCollection<Discussion> Discussions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Discussion>("boxModel.FK_Discussion_UserProfile", "Discussion");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Discussion>("boxModel.FK_Discussion_UserProfile", "Discussion", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("boxModel", "FK_Invitation_UserProfile", "Invitation")]
        public EntityCollection<Invitation> Invitations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Invitation>("boxModel.FK_Invitation_UserProfile", "Invitation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Invitation>("boxModel.FK_Invitation_UserProfile", "Invitation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("boxModel", "FK_MeetingParticipant_UserProfile", "MeetingParticipant")]
        public EntityCollection<MeetingParticipant> MeetingParticipants
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MeetingParticipant>("boxModel.FK_MeetingParticipant_UserProfile", "MeetingParticipant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MeetingParticipant>("boxModel.FK_MeetingParticipant_UserProfile", "MeetingParticipant", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("boxModel", "FK_NotificationHeader_UserProfile", "NotificationHeader")]
        public EntityCollection<NotificationHeader> NotificationHeaders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<NotificationHeader>("boxModel.FK_NotificationHeader_UserProfile", "NotificationHeader");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<NotificationHeader>("boxModel.FK_NotificationHeader_UserProfile", "NotificationHeader", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("boxModel", "FK_NotInfo_UserProfile", "NotInfo")]
        public EntityCollection<NotInfo> NotInfoes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<NotInfo>("boxModel.FK_NotInfo_UserProfile", "NotInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<NotInfo>("boxModel.FK_NotInfo_UserProfile", "NotInfo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("boxModel", "FK_ProjectUser_UserProfile", "ProjectUser")]
        public EntityCollection<ProjectUser> ProjectUsers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectUser>("boxModel.FK_ProjectUser_UserProfile", "ProjectUser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectUser>("boxModel.FK_ProjectUser_UserProfile", "ProjectUser", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("boxModel", "FK_Reply_UserProfile", "Reply")]
        public EntityCollection<Reply> Replies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Reply>("boxModel.FK_Reply_UserProfile", "Reply");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Reply>("boxModel.FK_Reply_UserProfile", "Reply", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("boxModel", "FK_TaskUser_UserProfile", "TaskUser")]
        public EntityCollection<TaskUser> TaskUsers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TaskUser>("boxModel.FK_TaskUser_UserProfile", "TaskUser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TaskUser>("boxModel.FK_TaskUser_UserProfile", "TaskUser", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("boxModel", "FK_FilePrivacy_UserProfile", "FilePrivacy")]
        public EntityCollection<FilePrivacy> FilePrivacies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FilePrivacy>("boxModel.FK_FilePrivacy_UserProfile", "FilePrivacy");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FilePrivacy>("boxModel.FK_FilePrivacy_UserProfile", "FilePrivacy", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("boxModel", "FK_DFile_UserProfile", "DFile")]
        public EntityCollection<DFile> DFiles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DFile>("boxModel.FK_DFile_UserProfile", "DFile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DFile>("boxModel.FK_DFile_UserProfile", "DFile", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("boxModel", "FK_TaskAssign_UserProfile", "TaskAssign")]
        public EntityCollection<TaskAssign> TaskAssigns
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TaskAssign>("boxModel.FK_TaskAssign_UserProfile", "TaskAssign");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TaskAssign>("boxModel.FK_TaskAssign_UserProfile", "TaskAssign", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
